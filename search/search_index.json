{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83e\udd77 Introduction \u00b6 reNgine is your go-to web application reconnaissance suite that's designed to simplify and streamline the reconnaissance process for security professionals, penetration testers, and bug bounty hunters. With its highly configurable engines, data correlation capabilities, continuous monitoring, database-backed reconnaissance data, and an intuitive user interface, reNgine redefines how you gather critical information about your target web applications. Traditional reconnaissance tools often fall short in terms of configurability and efficiency. reNgine addresses these shortcomings and emerges as a excellent alternative to existing commercial tools. reNgine was created to address the limitations of traditional reconnaissance tools and provide a better alternative, even surpassing some commercial offerings. Whether you're a bug bounty hunter, a penetration tester, or a corporate security team, reNgine is your go-to solution for automating and enhancing your information-gathering efforts. reNgine is not an ordinary reconnaissance suite; it's a game-changer! With the 2.0 release we've turbocharged the traditional workflow with groundbreaking features that is sure to ease your reconnaissance game. reNgine redefines the art of reconnaissance! \ud83e\udded Workflow \u00b6 \u2b50 Features \u00b6 reNgine is packed with features that no any open other source tool provides. Here are some list of cool features supported by reNgine: Reconnaissance: Subdomain Discovery IP and Open Ports Identification Endpoints Discovery Directory/Files fuzzing Screenshot Gathering Vulnerability Scan Nuclei Dalfox XSS Scanner CRLFuzzer Misconfigured S3 Scanner WHOIS Identification WAF Detection OSINT Capabilities Meta info Gathering Employees Gathering Email Address gathering Google Dorking for sensitive info and urls Projects, create distinct project spaces, each tailored to a specific purpose, such as personal bug bounty hunting, client engagements, or any other specialized recon task. Perform Advanced Query lookup using natural language alike and, or, not operations Highly configurable YAML-based Scan Engines Support for Parallel Scans Support for Subscans Recon Data visualization GPT Vulnerability Description, Impact and Remediation generation GPT Attack Surface Generator Multiple Roles and Permissions to cater a team's need Customizable Alerts/Notifications on Slack, Discord, and Telegram Automatically report Vulnerabilities to HackerOne Recon Notes and Todos Clocked Scans (Run reconnaissance exactly at X Hours and Y minutes) and Periodic Scans (Runs reconnaissance every X minutes/- hours/days/week) Proxy Support Screenshot Gallery with Filters Powerful recon data filtering with autosuggestions Recon Data changes, find new/removed subdomains/endpoints Tag targets into the Organization Smart Duplicate endpoint removal based on page title and content length to cleanup the reconnaissance data Identify Interesting Subdomains Custom GF patterns and custom Nuclei Templates Edit tool-related configuration files (Nuclei, Subfinder, Naabu, amass) Add external tools from Github/Go Interoperable with other tools, Import/Export Subdomains/Endpoints Import Targets via IP and/or CIDRs Report Generation Toolbox: Comes bundled with most commonly used tools during penetration testing such as whois lookup, CMS detector, CVE lookup, etc. Identification of related domains and related TLDs for targets Find actionable insights such as Most Common Vulnerability, Most Common CVE ID, Most Vulnerable Target/Subdomain, etc. Tip Follow me on Twitter to keep yourself updated about new features. \ud83d\ude80 Getting Started \u00b6 If this is your first time visiting reNgine, here is a guide on \ud83d\ude80 Getting Started . If are already using reNgine and wish to Update/Upgrade, head to \ud83d\udd25 Update . \u26a1 Usage Guide \u00b6 If have already installed reNgine, and want to learn how to use, head to \u26a1 Usage . \ud83d\udcbb Developer's Guide \u00b6 If you wish to add new features or want to contribute to reNgine, head to Developer's Guide \ud83d\ude4b Need Help \u00b6 If \u26a1 Usage documentation is not sufficient, and you still need help, head to \ud83d\udc81 Discord section. This section contains instructions on how to join reNgine discord server. \ud83d\udcf9 Community published blogs/videos \u00b6 Community may have published blogs/videos on your own language. Please check the community published blogs/videos here . \ud83d\udee1\ufe0f Reporting Security Issues \u00b6 If you have found any security issues on reNgine, we recommend reporting them immediately. reNgine also has it's bug bounty program and is your chance to get paid for security issues. Danger Please do not disclose any security vulnerabilities on Github issues. Guide on How to report security issues is available. \ud83e\udd16 Changelogs \u00b6 If you want to know the latest changes in reNgine, head to \ud83e\udd16 Changelog . Support \u00b6 Over the last few years I have been working insane on reNgine to bring new features with the only goal to make this as De-facto standard for reconnaissance. Most of my out of office hours and weeknds are spent on working on reNgine. I do this with addition to my primary job. I am happy to have received such an overwhelming support from community. But to keep this project alive, I am seeking financial support. Paypal Bitcoin Ethereum https://www.paypal.com/paypalme/yogeshojha11 35AiKyNswNZ4TZUSdriHopSCjNMPi63BCX 0xe7A337Da6ff98A28513C26A7Fec8C9b42A63d346 It takes a considerable amount of time to add new features and make sure everything is working. A donation is your way saying: reNgine is awesome Any support is greatly appreciated! Thank you! License \u00b6 reNgine is licensed under the GNU General Public License v3.0","title":"Home"},{"location":"#introduction","text":"reNgine is your go-to web application reconnaissance suite that's designed to simplify and streamline the reconnaissance process for security professionals, penetration testers, and bug bounty hunters. With its highly configurable engines, data correlation capabilities, continuous monitoring, database-backed reconnaissance data, and an intuitive user interface, reNgine redefines how you gather critical information about your target web applications. Traditional reconnaissance tools often fall short in terms of configurability and efficiency. reNgine addresses these shortcomings and emerges as a excellent alternative to existing commercial tools. reNgine was created to address the limitations of traditional reconnaissance tools and provide a better alternative, even surpassing some commercial offerings. Whether you're a bug bounty hunter, a penetration tester, or a corporate security team, reNgine is your go-to solution for automating and enhancing your information-gathering efforts. reNgine is not an ordinary reconnaissance suite; it's a game-changer! With the 2.0 release we've turbocharged the traditional workflow with groundbreaking features that is sure to ease your reconnaissance game. reNgine redefines the art of reconnaissance!","title":"\ud83e\udd77 Introduction"},{"location":"#workflow","text":"","title":"\ud83e\udded Workflow"},{"location":"#features","text":"reNgine is packed with features that no any open other source tool provides. Here are some list of cool features supported by reNgine: Reconnaissance: Subdomain Discovery IP and Open Ports Identification Endpoints Discovery Directory/Files fuzzing Screenshot Gathering Vulnerability Scan Nuclei Dalfox XSS Scanner CRLFuzzer Misconfigured S3 Scanner WHOIS Identification WAF Detection OSINT Capabilities Meta info Gathering Employees Gathering Email Address gathering Google Dorking for sensitive info and urls Projects, create distinct project spaces, each tailored to a specific purpose, such as personal bug bounty hunting, client engagements, or any other specialized recon task. Perform Advanced Query lookup using natural language alike and, or, not operations Highly configurable YAML-based Scan Engines Support for Parallel Scans Support for Subscans Recon Data visualization GPT Vulnerability Description, Impact and Remediation generation GPT Attack Surface Generator Multiple Roles and Permissions to cater a team's need Customizable Alerts/Notifications on Slack, Discord, and Telegram Automatically report Vulnerabilities to HackerOne Recon Notes and Todos Clocked Scans (Run reconnaissance exactly at X Hours and Y minutes) and Periodic Scans (Runs reconnaissance every X minutes/- hours/days/week) Proxy Support Screenshot Gallery with Filters Powerful recon data filtering with autosuggestions Recon Data changes, find new/removed subdomains/endpoints Tag targets into the Organization Smart Duplicate endpoint removal based on page title and content length to cleanup the reconnaissance data Identify Interesting Subdomains Custom GF patterns and custom Nuclei Templates Edit tool-related configuration files (Nuclei, Subfinder, Naabu, amass) Add external tools from Github/Go Interoperable with other tools, Import/Export Subdomains/Endpoints Import Targets via IP and/or CIDRs Report Generation Toolbox: Comes bundled with most commonly used tools during penetration testing such as whois lookup, CMS detector, CVE lookup, etc. Identification of related domains and related TLDs for targets Find actionable insights such as Most Common Vulnerability, Most Common CVE ID, Most Vulnerable Target/Subdomain, etc. Tip Follow me on Twitter to keep yourself updated about new features.","title":"\u2b50 Features"},{"location":"#getting-started","text":"If this is your first time visiting reNgine, here is a guide on \ud83d\ude80 Getting Started . If are already using reNgine and wish to Update/Upgrade, head to \ud83d\udd25 Update .","title":"\ud83d\ude80 Getting Started"},{"location":"#usage-guide","text":"If have already installed reNgine, and want to learn how to use, head to \u26a1 Usage .","title":"\u26a1 Usage Guide"},{"location":"#developers-guide","text":"If you wish to add new features or want to contribute to reNgine, head to Developer's Guide","title":"\ud83d\udcbb Developer's Guide"},{"location":"#need-help","text":"If \u26a1 Usage documentation is not sufficient, and you still need help, head to \ud83d\udc81 Discord section. This section contains instructions on how to join reNgine discord server.","title":"\ud83d\ude4b Need Help"},{"location":"#community-published-blogsvideos","text":"Community may have published blogs/videos on your own language. Please check the community published blogs/videos here .","title":"\ud83d\udcf9 Community published blogs/videos"},{"location":"#reporting-security-issues","text":"If you have found any security issues on reNgine, we recommend reporting them immediately. reNgine also has it's bug bounty program and is your chance to get paid for security issues. Danger Please do not disclose any security vulnerabilities on Github issues. Guide on How to report security issues is available.","title":"\ud83d\udee1\ufe0f Reporting Security Issues"},{"location":"#changelogs","text":"If you want to know the latest changes in reNgine, head to \ud83e\udd16 Changelog .","title":"\ud83e\udd16 Changelogs"},{"location":"#support","text":"Over the last few years I have been working insane on reNgine to bring new features with the only goal to make this as De-facto standard for reconnaissance. Most of my out of office hours and weeknds are spent on working on reNgine. I do this with addition to my primary job. I am happy to have received such an overwhelming support from community. But to keep this project alive, I am seeking financial support. Paypal Bitcoin Ethereum https://www.paypal.com/paypalme/yogeshojha11 35AiKyNswNZ4TZUSdriHopSCjNMPi63BCX 0xe7A337Da6ff98A28513C26A7Fec8C9b42A63d346 It takes a considerable amount of time to add new features and make sure everything is working. A donation is your way saying: reNgine is awesome Any support is greatly appreciated! Thank you!","title":"Support"},{"location":"#license","text":"reNgine is licensed under the GNU General Public License v3.0","title":"License"},{"location":"changelog/","text":"Changelog \u00b6 This section contains the changes happened in reNgine. Backwards Compatibility Check \u00b6 Please ensure backwards compatibility before updating reNgine. Version Backwards Compatible 2.0.0 \u274c Not Compatible 1.3.6 \u2714\ufe0f Compatible 1.3.5 \u2714\ufe0f Compatible 1.3.4 \u2714\ufe0f Compatible 1.3.3 \u2714\ufe0f Compatible 1.3.2 \u2714\ufe0f Compatible 1.3.1 \u2714\ufe0f Compatible 1.3.0 \u2714\ufe0f Compatible 1.2.0 \u2714\ufe0f Compatible 1.1 \u274c Not Compatible 1.0.1 \u2714\ufe0f Compatible upto 1.0 1.0 \u274c Not Compatible 0.5.3 \u2714\ufe0f Compatible 0.5.2 \u2714\ufe0f Compatible 0.5.1 \u2714\ufe0f Compatible 0.5 \u2714\ufe0f Compatible 0.4 \u2714\ufe0f Compatible 0.3 \u2714\ufe0f Compatible 0.2 \u2714\ufe0f Compatible 0.1 \u2714\ufe0f Compatible \ud83d\ude80 2.0.0 \u00b6 Release Date: Sept 30, 2023 Added Projects: Projects allow you to efficiently organize their web application reconnaissance efforts. With this feature, you can create distinct project spaces, each tailored to a specific purpose, such as personal bug bounty hunting, client engagements, or any other specialized recon task. Roles and Permissions: assign distinct roles to your team members: Sys Admin, Penetration Tester, and Auditor\u2014each with precisely defined permissions to tailor their access and actions within the reNgine ecosystem. GPT-powered Report Generation: With the power of OpenAI's GPT, reNgine now provides you with detailed vulnerability descriptions, remediation strategies, and impact assessments. API Vault: This feature allows you to organize your API keys such as OpenAI or Netlas API keys. GPT-powered Attack Surface Generation URL gathering now is much more efficient, removing duplicate endpoints based on similar HTTP Responses, having the same content_lenth, or page_title. Custom duplicate fields can also be set from the scan engine configuration. URL Path filtering while initiating scan: For instance, if we want to scan only endpoints starting with https://example.com/start/, we can pass the /start as a path filter while starting the scan. @ocervell Expanding Target Concept: reNgine 2.0 now accepts IPs, URLS, etc as targets. (#678, #658) Excellent work by @ocervell A ton of refactoring on reNgine's core to improve scan efficiency. Massive kudos to @ocervell Created a custom celery workflow to be able to run several tasks in parallel that are not dependent on each other, such OSINT task and subdomain discovery will run in parallel, and directory and file fuzzing, vulnerability scan, screenshot gathering etc. will run in parallel after port scan or url fetching is completed. This will increase the efficiency of scans and instead of having one long flow of tasks, they can run independently on their own. @ocervell Refactored all tasks to run asynchronously @ocervell Added a stream_command that allows to read the output of a command live: this means the UI is updated with results while the command runs and does not have to wait until the task completes. Excellent work by @ocervell Pwndb is now replaced by h8mail. @ocervell Group Scan Results: reNgine 2.0 allows to group of subdomains based on similar page titles and HTTP status, and also vulnerability grouping based on the same vulnerability title and severity. Added Support for Nmap: reNgine 2.0 allows to run Nmap scripts and vuln scans on ports found by Naabu. @ocervell Added support for Shared Scan Variables in Scan Engine Configuration: enable_http_crawl : (true/false) You can disable it to be more stealthy or focus on something different than HTTP timeout : set timeout for all tasks rate_limit : set rate limit for all tasks retries : set retries for all tasks custom_header : set the custom header for all tasks Added Dalfox for XSS Vulnerability Scan Added CRLFuzz for CRLF Vulnerability Scan Added S3Scanner for scanning misconfigured S3 buckets Improve OSINT Dork results, now detects admin panels, login pages and dashboards Added Custom Dorks Improved UI for vulnerability results, clicking on each vulnerability will open up a sidebar with vulnerability details. Added HTTP Request and Response in vulnerability Results Under Admin Settings, added an option to allow add/remove/deactivate additional users Added Option to Preview Scan Report instead of forcing to download Added Katana for crawling and spidering URLs Added Netlas for Whois and subdomain gathering Added TLSX for subdomain gathering Added CTFR for subdomain gathering Added historical IP in whois section Added Pagination on Large datatables such as subdomains, endpoints, vulnerabilities etc #949 @psyray Fixes GF patterns do not run on 404 endpoints (#574 closed) Fixes for retrieving whois data (#693 closed) Related/Associated Domains in Whois section is now fixed Fixed missing lightbox css & js on target screenshot page #947 #948 @psyray Issue in Port-scan: int object is not subscriptable Fixed #939, #938 @AnonymousWP Removed Removed pwndb and tor related to it. Removed tor for pwndb \ud83c\udff7\ufe0f 1.3.6 \u00b6 Release Date: March 2, 2023 Fixed installation errors. Fixed #824, #823, #816, #809, #803, #801, #798, #797, #794, #791 . \ud83c\udff7\ufe0f 1.3.5 \u00b6 Release Date: December 29, 2022 Fixed #769, #768, #766, #761, Thanks to, @bin-maker, @carsonchan12345, @paweloque, @opabravo \ud83c\udff7\ufe0f 1.3.4 \u00b6 Release Date: November 16, 2022 Fixed #748 , #743 , #738, #739 \ud83c\udff7\ufe0f 1.3.3 \u00b6 Release Date: October 9, 2022 Fixed #723, Upgraded Go to 1.18.2 \ud83c\udff7\ufe0f 1.3.2 \u00b6 Release Date: August 20, 2022 Fixed #683 For Filtering GF tags Fixed #669 Where Directory UI had to be collapsed \ud83c\udff7\ufe0f 1.3.1 \u00b6 Release Date: August 12, 2022 Fix for #643 Downloading issue for Subdomain and Endpoints Fix for #627 Too many Targets causes issues while loading datatable Fix version Numbering issue \ud83c\udff7\ufe0f 1.3.0 \u00b6 Release Date: July 19, 2022 Added Geographic Distribution of Assets Map Fixed WHOIS Provider Changed Fixed Dark UI Issues Fixed HTTPX Issue \ud83c\udff7\ufe0f 1.2.0 \u00b6 Release Date: May 27, 2022 Added Naabu Exclude CDN Port Scanning Added WAF Detection Fixes Fix #630 Character Name too Long Issue [Security] Fixed several instances of Command Injections, CVE-2022-28995, CVE-2022-1813 Hakrawler Fixed - #623 Fixed XSS on Hackerone report via Markdown Fixed XSS on Import Target using malicious filename Stop Scan Fixed #561 Fix installation issue due to missing curl Updated docker-compose version \ud83c\udff7\ufe0f 1.1 \u00b6 Release Date: Apr 24, 2022 Redeigned UI Added Subscan Feature Subscan allows further scanning any subdomains. Assume from a normal recon process you identified a subdomain that you wish to do port scan. Earlier, you had to add that subdomain as a target. Now you can just select the subdomain and initiate subscan. Ability to Download reconnaissance or vulnerability report Added option to customize report, customization includes the look and feel of report, executive summary etc. Add IP Address from IP WHOIS Addition on Detail Scan and fetch whois automatically on Adding Single Targets Universal Search Box Addition of Quick Add menus Added ToolBox Feature ToolBox will feature most commonly used recon tools. One can use these tools to identify whois, CMSDetection etc without adding targets. Currently, Whois, CMSDetector and CVE ID lookup is supported. More tools to follow up. Notify New Releases on reNgine if available Tools Arsenal Section to feature preinstalled and custom tools Ability to Update preinstalled tools from Tools Arsenal Section Ability to download/add custom tools Added option for Custom Header on Scan Engine Added CVE_ID, CWE_ID, CVSS Score, CVSS Metrics on Vulnerability Section, this also includes lookup using cve_id, cwe_id, cvss_score etc Added curl command and references on Vulnerability Section Added Columns Filtering Option on Subdomain, Vulnerability and Endpoints Tables Added Error Handling for Failed Scans, reason for failure scan will be displayed Added Related Domains using WHOIS Added Related TLDs Added HTTP Status Breakdown Widget Added CMS Detector Updated Visualization Option to Download Selected Subdomains Added additional Nuclei Templates from https://github.com/geeknik/the-nuclei-templates Added SSRF check from Nagli Nuclei Template Added option to fetch CVE_ID details Added option to Delete Multiple Scans Added ffuf as Directory and Files fuzzer Added widgets such as Most vulnerable Targets, Most Common Vulnerabilities, Most Common CVE IDs, Most Common CWE IDs, Most Common Vulnerability Tags \ud83c\udff7\ufe0f 1.0.1 \u00b6 Release Date: Aug 29, 2021 Changelog Fixed #482 Endpoints and Vulnerability Datatable were showing results of other targets due to the scan_id parameter Fixed #479 where the scan was failing due to recent httpx release, change was in the JSON output Fixed #476 where users were unable to click on Clocked Scan (Reported only on Firefox) Fixed #442 where an extra slash was added in Directory URLs Fixed #337 where users were unable to link custom wordlist Fixed #436 Checkbox in Notification Settings were not working due to same name attribute, now fixed Fixed #439 Hakrawler crashed if the deep mode was activated due to -plain flag Fixed #437 If Out of Scope subdomains were supplied, the scan was failing due to None value Fixed #424 Multiple Targets couldn't be scanned Improvements Enhanced install script, check for if docker is running service or not #468 Security Fixed Cross Site Scripting #460 #457 #454 #453 #459 #460 Fixed Cross Site Scripting reported on Huntr #478 https://www.huntr.dev/bounties/ac07ae2a-1335-4dca-8d55-64adf720bafb/ \ud83c\udff7\ufe0f 1.0 \u00b6 Release Date: Aug 15, 2021 After several months of work, I am excited to announce reNgine 1.0. In a nutshell, 1.0, is feature-packed with a lot of exciting features that are sure to ease your recon game. You may watch the trailer here Introducing Dark Mode, a feature you all have been asking for, is finally here. Recon Data visualization Recon Data visualization is the representation of recon data like subdomain, ips, endpoints, ports, vulnerabilities etc into the visual format like Trees and Charts. Improved correlation among recon data A considerable amount of effort has been spent on making sure that the correlation between recon data is consistent. With this improved correlation, you will now be able to identify recon data like, how many of the subdomains uses X as technology, how many of the subdomains use X.X.X.X as IP, etc. This also means that you will be able to see the number of vulnerabilities that a subdomain has, right from the subdomain table. Ability to identify Interesting Subdomains. reNgine uses certain keywords like admin, cpanel, ftp, dashboard to find what is interesting for you. Users will also be able to add their own keywords and choose conditions like, \"A subdomain in an interesting subdomain if it matches this keyword but also HTTP status is 200\". This allows you to identify what's the most important subdomains to attack against and super useful if you have a very large number of subdomains. Ability to Automatically report Vulnerabilities to Hackerone with customizable vulnerability report. I am excited about the possibilities of Hackerone api, this feature allows you to automatically report the vulnerability to HackerOne if a Critical or High vulnerability is found. Stay ahead of the game! What's exciting is that you also have an option to edit the vulnerability report. To prevent spamming triagers, I've made sure that only Critical and High vulnerabilities are reported. While you will still have an option to manually report the rest of the vulnerabilities. Introducing OSINT Capabilities OSINT is one of the most required features in any recon engine, and beginning 1.0, reNgine comes with OSINT capabilities. This includes support for Dorking, Employees, Emails, Leaked Passwords, etc to be searched. Recon Todo A good recon engine also requires a Todo feature, the idea is that you will be able to recon, add your recon todo or notes right inside reNgine. You will have an option to add todo for your Scan History, for your particular subdomain, or just a TODO! Anything is supported. You can also prioritize by making the Todo important. Proxy Support Proxies are an integral part of any web scraping. Every website has a limit to the certain number of requests for a certain period of time from a particular IP Address that it will allow, exceeding the limit will block incoming requests from such IP Address for a specific period of time. And this is especially true for Dorking and other OSINT reNgine does. After certain Dorking attempts Google is likely to ban your IP for a certain period of time. So using a proxy was a must. Introducing proxy support for reNgine, you will have an option to add hundreds of proxies, and reNgine will pick one of them randomly during the scan. GF support GF is an awesome tool for pattern matching in URLs! A lot of fellow hackers wanted GF support in reNgine. We now bring GF support with an option to upload your own custom GF template. Screenshot Gallery with Filters This probably was the most requested feature in reNgine. A recon engine is incomplete without a screenshot gallery. I am also excited to let you know that, the screenshot gallery also comes with filters, you will have an option to add filters like HTTP status, IP Address, Port, Services, and Technology. And, filters will also come with an autosuggestion feature. Powerful recon data filtering with auto-suggestions Recon data filtering was one of the most important features in reNgine, recon data is huge, and we do not want you to get lost, or spend a lot of time looking for the right recon data. So, presenting you, recon data filtering with autosuggestions. You will now be able to see a search bar in Subdomains Table, URLs, Vulnerabilities Table which will auto-suggest the col names. You can combine multiple queries using &, |, etc. Example gf_patterns=lfi&http_status=200&content_length>0 The possibilities are endless... Recon Data changes, finds new/removed subdomains/endpoints reNgine will now compare your last two scans to find out the recon data changes. You will have an option to send the changes to your notification channels as well. Super helpful while doing continuous monitoring on a target. Inside the scan dashboard, you will now see a separate section for Recon Data changes, which will identify any added or removed subdomains or endpoints. Tagging of targets into Organization There are times when you wish to perform a scan for all the targets that belong to an organization. reNgine 1.0 allows you to tag multiple targets to an organization and initiate or schedule scans with one click. Support for custom GF patterns and Nuclei Templates While nuclei was a part of the earlier release, but there wasn't any easy way to upload your custom nuclei templates. Now, you will have an option to add your custom GF or Nuclei templates right from the UI. You will also have an option to view the template. Support for editing tool-related configuration files (Nuclei, Subfinder, Naabu, amass) Tools like Nuclei, Subfinder uses configuration files to pass API keys and certain tool-related settings. We now bring an option to directly edit tool-related configuration files right from reNgine UI. This means you will also be able to view them. Option to Mark Subdomains as important This is a tiny little feature that will allow you to mark any subdomain as important! Watch out for a star icon on the subdomains table, you'll be able to mark them as important. Separate tab for Directory scan results It is true that directory scan results were breaking the subdomains table, from a UX perspective, it was not a really good idea to show everything in the subdomains table. So, a new tab has been added just for directory scan results. Option to Import and Export Subdomains and export endpoints Interoperability is something every recon tool needs, and reNgine is no different. You will now be able to import subdomains from your private recon tools to any scan before you initiate. You will see this option to import the subdomain just after you choose the scan engine. In the same section, you will also see an option to exclude subdomains. We also now allow you to download subdomains, or just download subdomains marked as important, or just download subdomains that are interesting. This also applies to endpoints, you can download all endpoints, just download any endpoints that have certain GF patterns matched. Clean your scan results and screenshots I understand most of you run reNgine on your VPS, and it is very understandable that you wish to clean scan results, screenshots to save up some space. reNgine now allows you to clean up your scan data and/or screenshots. Enhanced and Customizable Scan alert with support for Slack, Discord & Telegram, also send recon data directly to Discord Notification in the earlier version of reNgine was not very efficient, and support was only for slack. reNgine 1.0 comes with support for Slack, Discord, and Telegram. You will also have an option to customize what kind of notification to be sent, only want vulnerability-related notifications? You can choose that, only want subdomains changes? You can choose them as well. You also have an option to upload these scan data directly to your discord. You can view the complete changelog here: https://github.com/yogeshojha/rengine/blob/master/CHANGELOG.md There are a lot more tiny improvements that I worked on for several months that are sure to give you a better experience, and let you stay ahead in the recon game! I really appreciate any feedback and suggestions. \ud83c\udff7\ufe0f 0.5.3 \u00b6 Release Date: Feb 25 2021 Build error for Naabu v2 Fixed Added rate support for Naabu \ud83c\udff7\ufe0f 0.5.2 \u00b6 Release Date: Feb 23 2021 Fixed XSS https://github.com/yogeshojha/rengine/issues/347 \ud83c\udff7\ufe0f 0.5.1 \u00b6 Release Date: Feb 19 2021 Features Added Discord Support for Notification Web hooks \ud83c\udff7\ufe0f 0.5 \u00b6 Release Date: 29 Nov 2020 Nuclei Integration: v0.5 is primarily focused on vulnerability scanner using Nuclei. This was a long pending due and we've finally integrated it. Powerful search queries across endpoints, subdomains and vulnerability scan results: reNgine reconnaissance data can now be queried using operators like <,>,&,| and !, namely greater than, less than, and, or, and not. This is extremely useful in querying the recon data. More details can be found at Instructions to perform Queries on Recon data Out of scope options: Many of you have been asking for out of scope option. Thanks to Valerio Brussani for his pull request which made it possible for out of scope options. Please check the documentation on how to define out of scope options. Official Documentation(WIP): We often get asked on how to use reNgine. For long, we had no official documentation. Finally, I've worked on it and we have the official documentation at rengine.wiki The documentation is divided into two parts, for Developers and for Penetration Testers. For developers, it's a work in progress. I will keep you all updated throughout the process. Redefined Dashboard: We've also made some changes in the Dashboard. The additions include vulnerability scan results, most vulnerable targets, most common vulnerabilities. Global Search: This feature has been one of the most requested features for reNgine. Now you can search all the subdomains, endpoints, and vulnerabilities. OneForAll Support: reNgine now supports OneForAll for subdomain discovery, it is currently in beta. I am working on how to integrate OneForAll APIKeys and Configuration files. Configuration Support for subfinder: You will now have ability to add configurations for subfinder as well. Timeout option for aquatone: We added timeout options in yaml configuration as a lot of screenshots were missing. You can now define timeout for http, scan and screenshots for timeout in milliseconds. Design Changes A lot of design changes has happened in reNgine. Some of which are: Endpoints Results and Vulnerability Scan Results are now displayed as a separate page, this is to separate the results and decrease the page load time. Checkbox next to Subdomains and Vulnerability report list to change the status, this allows you to mark all subdomains and vulnerabilities that you've already completed working on. Sometimes due to timeout, aquatone was skipping the screenshots and due to that, navigations between screenshots was little annoying. We have fixed it as well. Ability to delete multiple targets and initiate multiple scans. Subdomain Takeover (Removed): As we decided to use Nuclei for Vulnerability Scanner, and also, since Subjack wasn't giving enough results, I decided to remove Subjack. The subdomain Takeover will now be part of Nuclei Vulnerability Scanner. \ud83c\udff7\ufe0f 0.4 \u00b6 Release Date: 2020-10-08 Features Background tasks migrated to Celery and redis Periodic and clocked scan added Ability to Stop and delete the scan CNAME and IP address added on detail scan Content type added on Endpoints section Ability to initiate multiple scans at a time \ud83c\udff7\ufe0f 0.3 \u00b6 Release Date: 2020-07-21 Features YAML based Customization Engine Ability to add wordlists Login Feature \ud83c\udff7\ufe0f 0.2 \u00b6 Release Date: 2020-07-11 Features Directory Search Enabled Fetch URLS using hakrawler Subdomain takeover using Subjack Add Bulk urls Delete Scan functionality Fix Windows Installation issue fixed Scrollbar Issue on small screens fixed \ud83c\udff7\ufe0f 0.1 \u00b6 Release Date: 2020-07-08 reNgine is released","title":"Changelog"},{"location":"changelog/#changelog","text":"This section contains the changes happened in reNgine.","title":"Changelog"},{"location":"changelog/#backwards-compatibility-check","text":"Please ensure backwards compatibility before updating reNgine. Version Backwards Compatible 2.0.0 \u274c Not Compatible 1.3.6 \u2714\ufe0f Compatible 1.3.5 \u2714\ufe0f Compatible 1.3.4 \u2714\ufe0f Compatible 1.3.3 \u2714\ufe0f Compatible 1.3.2 \u2714\ufe0f Compatible 1.3.1 \u2714\ufe0f Compatible 1.3.0 \u2714\ufe0f Compatible 1.2.0 \u2714\ufe0f Compatible 1.1 \u274c Not Compatible 1.0.1 \u2714\ufe0f Compatible upto 1.0 1.0 \u274c Not Compatible 0.5.3 \u2714\ufe0f Compatible 0.5.2 \u2714\ufe0f Compatible 0.5.1 \u2714\ufe0f Compatible 0.5 \u2714\ufe0f Compatible 0.4 \u2714\ufe0f Compatible 0.3 \u2714\ufe0f Compatible 0.2 \u2714\ufe0f Compatible 0.1 \u2714\ufe0f Compatible","title":"Backwards Compatibility Check"},{"location":"changelog/#200","text":"Release Date: Sept 30, 2023 Added Projects: Projects allow you to efficiently organize their web application reconnaissance efforts. With this feature, you can create distinct project spaces, each tailored to a specific purpose, such as personal bug bounty hunting, client engagements, or any other specialized recon task. Roles and Permissions: assign distinct roles to your team members: Sys Admin, Penetration Tester, and Auditor\u2014each with precisely defined permissions to tailor their access and actions within the reNgine ecosystem. GPT-powered Report Generation: With the power of OpenAI's GPT, reNgine now provides you with detailed vulnerability descriptions, remediation strategies, and impact assessments. API Vault: This feature allows you to organize your API keys such as OpenAI or Netlas API keys. GPT-powered Attack Surface Generation URL gathering now is much more efficient, removing duplicate endpoints based on similar HTTP Responses, having the same content_lenth, or page_title. Custom duplicate fields can also be set from the scan engine configuration. URL Path filtering while initiating scan: For instance, if we want to scan only endpoints starting with https://example.com/start/, we can pass the /start as a path filter while starting the scan. @ocervell Expanding Target Concept: reNgine 2.0 now accepts IPs, URLS, etc as targets. (#678, #658) Excellent work by @ocervell A ton of refactoring on reNgine's core to improve scan efficiency. Massive kudos to @ocervell Created a custom celery workflow to be able to run several tasks in parallel that are not dependent on each other, such OSINT task and subdomain discovery will run in parallel, and directory and file fuzzing, vulnerability scan, screenshot gathering etc. will run in parallel after port scan or url fetching is completed. This will increase the efficiency of scans and instead of having one long flow of tasks, they can run independently on their own. @ocervell Refactored all tasks to run asynchronously @ocervell Added a stream_command that allows to read the output of a command live: this means the UI is updated with results while the command runs and does not have to wait until the task completes. Excellent work by @ocervell Pwndb is now replaced by h8mail. @ocervell Group Scan Results: reNgine 2.0 allows to group of subdomains based on similar page titles and HTTP status, and also vulnerability grouping based on the same vulnerability title and severity. Added Support for Nmap: reNgine 2.0 allows to run Nmap scripts and vuln scans on ports found by Naabu. @ocervell Added support for Shared Scan Variables in Scan Engine Configuration: enable_http_crawl : (true/false) You can disable it to be more stealthy or focus on something different than HTTP timeout : set timeout for all tasks rate_limit : set rate limit for all tasks retries : set retries for all tasks custom_header : set the custom header for all tasks Added Dalfox for XSS Vulnerability Scan Added CRLFuzz for CRLF Vulnerability Scan Added S3Scanner for scanning misconfigured S3 buckets Improve OSINT Dork results, now detects admin panels, login pages and dashboards Added Custom Dorks Improved UI for vulnerability results, clicking on each vulnerability will open up a sidebar with vulnerability details. Added HTTP Request and Response in vulnerability Results Under Admin Settings, added an option to allow add/remove/deactivate additional users Added Option to Preview Scan Report instead of forcing to download Added Katana for crawling and spidering URLs Added Netlas for Whois and subdomain gathering Added TLSX for subdomain gathering Added CTFR for subdomain gathering Added historical IP in whois section Added Pagination on Large datatables such as subdomains, endpoints, vulnerabilities etc #949 @psyray Fixes GF patterns do not run on 404 endpoints (#574 closed) Fixes for retrieving whois data (#693 closed) Related/Associated Domains in Whois section is now fixed Fixed missing lightbox css & js on target screenshot page #947 #948 @psyray Issue in Port-scan: int object is not subscriptable Fixed #939, #938 @AnonymousWP Removed Removed pwndb and tor related to it. Removed tor for pwndb","title":"\ud83d\ude80 2.0.0"},{"location":"changelog/#136","text":"Release Date: March 2, 2023 Fixed installation errors. Fixed #824, #823, #816, #809, #803, #801, #798, #797, #794, #791 .","title":"\ud83c\udff7\ufe0f 1.3.6"},{"location":"changelog/#135","text":"Release Date: December 29, 2022 Fixed #769, #768, #766, #761, Thanks to, @bin-maker, @carsonchan12345, @paweloque, @opabravo","title":"\ud83c\udff7\ufe0f 1.3.5"},{"location":"changelog/#134","text":"Release Date: November 16, 2022 Fixed #748 , #743 , #738, #739","title":"\ud83c\udff7\ufe0f 1.3.4"},{"location":"changelog/#133","text":"Release Date: October 9, 2022 Fixed #723, Upgraded Go to 1.18.2","title":"\ud83c\udff7\ufe0f 1.3.3"},{"location":"changelog/#132","text":"Release Date: August 20, 2022 Fixed #683 For Filtering GF tags Fixed #669 Where Directory UI had to be collapsed","title":"\ud83c\udff7\ufe0f 1.3.2"},{"location":"changelog/#131","text":"Release Date: August 12, 2022 Fix for #643 Downloading issue for Subdomain and Endpoints Fix for #627 Too many Targets causes issues while loading datatable Fix version Numbering issue","title":"\ud83c\udff7\ufe0f 1.3.1"},{"location":"changelog/#130","text":"Release Date: July 19, 2022 Added Geographic Distribution of Assets Map Fixed WHOIS Provider Changed Fixed Dark UI Issues Fixed HTTPX Issue","title":"\ud83c\udff7\ufe0f 1.3.0"},{"location":"changelog/#120","text":"Release Date: May 27, 2022 Added Naabu Exclude CDN Port Scanning Added WAF Detection Fixes Fix #630 Character Name too Long Issue [Security] Fixed several instances of Command Injections, CVE-2022-28995, CVE-2022-1813 Hakrawler Fixed - #623 Fixed XSS on Hackerone report via Markdown Fixed XSS on Import Target using malicious filename Stop Scan Fixed #561 Fix installation issue due to missing curl Updated docker-compose version","title":"\ud83c\udff7\ufe0f 1.2.0"},{"location":"changelog/#11","text":"Release Date: Apr 24, 2022 Redeigned UI Added Subscan Feature Subscan allows further scanning any subdomains. Assume from a normal recon process you identified a subdomain that you wish to do port scan. Earlier, you had to add that subdomain as a target. Now you can just select the subdomain and initiate subscan. Ability to Download reconnaissance or vulnerability report Added option to customize report, customization includes the look and feel of report, executive summary etc. Add IP Address from IP WHOIS Addition on Detail Scan and fetch whois automatically on Adding Single Targets Universal Search Box Addition of Quick Add menus Added ToolBox Feature ToolBox will feature most commonly used recon tools. One can use these tools to identify whois, CMSDetection etc without adding targets. Currently, Whois, CMSDetector and CVE ID lookup is supported. More tools to follow up. Notify New Releases on reNgine if available Tools Arsenal Section to feature preinstalled and custom tools Ability to Update preinstalled tools from Tools Arsenal Section Ability to download/add custom tools Added option for Custom Header on Scan Engine Added CVE_ID, CWE_ID, CVSS Score, CVSS Metrics on Vulnerability Section, this also includes lookup using cve_id, cwe_id, cvss_score etc Added curl command and references on Vulnerability Section Added Columns Filtering Option on Subdomain, Vulnerability and Endpoints Tables Added Error Handling for Failed Scans, reason for failure scan will be displayed Added Related Domains using WHOIS Added Related TLDs Added HTTP Status Breakdown Widget Added CMS Detector Updated Visualization Option to Download Selected Subdomains Added additional Nuclei Templates from https://github.com/geeknik/the-nuclei-templates Added SSRF check from Nagli Nuclei Template Added option to fetch CVE_ID details Added option to Delete Multiple Scans Added ffuf as Directory and Files fuzzer Added widgets such as Most vulnerable Targets, Most Common Vulnerabilities, Most Common CVE IDs, Most Common CWE IDs, Most Common Vulnerability Tags","title":"\ud83c\udff7\ufe0f 1.1"},{"location":"changelog/#101","text":"Release Date: Aug 29, 2021 Changelog Fixed #482 Endpoints and Vulnerability Datatable were showing results of other targets due to the scan_id parameter Fixed #479 where the scan was failing due to recent httpx release, change was in the JSON output Fixed #476 where users were unable to click on Clocked Scan (Reported only on Firefox) Fixed #442 where an extra slash was added in Directory URLs Fixed #337 where users were unable to link custom wordlist Fixed #436 Checkbox in Notification Settings were not working due to same name attribute, now fixed Fixed #439 Hakrawler crashed if the deep mode was activated due to -plain flag Fixed #437 If Out of Scope subdomains were supplied, the scan was failing due to None value Fixed #424 Multiple Targets couldn't be scanned Improvements Enhanced install script, check for if docker is running service or not #468 Security Fixed Cross Site Scripting #460 #457 #454 #453 #459 #460 Fixed Cross Site Scripting reported on Huntr #478 https://www.huntr.dev/bounties/ac07ae2a-1335-4dca-8d55-64adf720bafb/","title":"\ud83c\udff7\ufe0f 1.0.1"},{"location":"changelog/#10","text":"Release Date: Aug 15, 2021 After several months of work, I am excited to announce reNgine 1.0. In a nutshell, 1.0, is feature-packed with a lot of exciting features that are sure to ease your recon game. You may watch the trailer here Introducing Dark Mode, a feature you all have been asking for, is finally here. Recon Data visualization Recon Data visualization is the representation of recon data like subdomain, ips, endpoints, ports, vulnerabilities etc into the visual format like Trees and Charts. Improved correlation among recon data A considerable amount of effort has been spent on making sure that the correlation between recon data is consistent. With this improved correlation, you will now be able to identify recon data like, how many of the subdomains uses X as technology, how many of the subdomains use X.X.X.X as IP, etc. This also means that you will be able to see the number of vulnerabilities that a subdomain has, right from the subdomain table. Ability to identify Interesting Subdomains. reNgine uses certain keywords like admin, cpanel, ftp, dashboard to find what is interesting for you. Users will also be able to add their own keywords and choose conditions like, \"A subdomain in an interesting subdomain if it matches this keyword but also HTTP status is 200\". This allows you to identify what's the most important subdomains to attack against and super useful if you have a very large number of subdomains. Ability to Automatically report Vulnerabilities to Hackerone with customizable vulnerability report. I am excited about the possibilities of Hackerone api, this feature allows you to automatically report the vulnerability to HackerOne if a Critical or High vulnerability is found. Stay ahead of the game! What's exciting is that you also have an option to edit the vulnerability report. To prevent spamming triagers, I've made sure that only Critical and High vulnerabilities are reported. While you will still have an option to manually report the rest of the vulnerabilities. Introducing OSINT Capabilities OSINT is one of the most required features in any recon engine, and beginning 1.0, reNgine comes with OSINT capabilities. This includes support for Dorking, Employees, Emails, Leaked Passwords, etc to be searched. Recon Todo A good recon engine also requires a Todo feature, the idea is that you will be able to recon, add your recon todo or notes right inside reNgine. You will have an option to add todo for your Scan History, for your particular subdomain, or just a TODO! Anything is supported. You can also prioritize by making the Todo important. Proxy Support Proxies are an integral part of any web scraping. Every website has a limit to the certain number of requests for a certain period of time from a particular IP Address that it will allow, exceeding the limit will block incoming requests from such IP Address for a specific period of time. And this is especially true for Dorking and other OSINT reNgine does. After certain Dorking attempts Google is likely to ban your IP for a certain period of time. So using a proxy was a must. Introducing proxy support for reNgine, you will have an option to add hundreds of proxies, and reNgine will pick one of them randomly during the scan. GF support GF is an awesome tool for pattern matching in URLs! A lot of fellow hackers wanted GF support in reNgine. We now bring GF support with an option to upload your own custom GF template. Screenshot Gallery with Filters This probably was the most requested feature in reNgine. A recon engine is incomplete without a screenshot gallery. I am also excited to let you know that, the screenshot gallery also comes with filters, you will have an option to add filters like HTTP status, IP Address, Port, Services, and Technology. And, filters will also come with an autosuggestion feature. Powerful recon data filtering with auto-suggestions Recon data filtering was one of the most important features in reNgine, recon data is huge, and we do not want you to get lost, or spend a lot of time looking for the right recon data. So, presenting you, recon data filtering with autosuggestions. You will now be able to see a search bar in Subdomains Table, URLs, Vulnerabilities Table which will auto-suggest the col names. You can combine multiple queries using &, |, etc. Example gf_patterns=lfi&http_status=200&content_length>0 The possibilities are endless... Recon Data changes, finds new/removed subdomains/endpoints reNgine will now compare your last two scans to find out the recon data changes. You will have an option to send the changes to your notification channels as well. Super helpful while doing continuous monitoring on a target. Inside the scan dashboard, you will now see a separate section for Recon Data changes, which will identify any added or removed subdomains or endpoints. Tagging of targets into Organization There are times when you wish to perform a scan for all the targets that belong to an organization. reNgine 1.0 allows you to tag multiple targets to an organization and initiate or schedule scans with one click. Support for custom GF patterns and Nuclei Templates While nuclei was a part of the earlier release, but there wasn't any easy way to upload your custom nuclei templates. Now, you will have an option to add your custom GF or Nuclei templates right from the UI. You will also have an option to view the template. Support for editing tool-related configuration files (Nuclei, Subfinder, Naabu, amass) Tools like Nuclei, Subfinder uses configuration files to pass API keys and certain tool-related settings. We now bring an option to directly edit tool-related configuration files right from reNgine UI. This means you will also be able to view them. Option to Mark Subdomains as important This is a tiny little feature that will allow you to mark any subdomain as important! Watch out for a star icon on the subdomains table, you'll be able to mark them as important. Separate tab for Directory scan results It is true that directory scan results were breaking the subdomains table, from a UX perspective, it was not a really good idea to show everything in the subdomains table. So, a new tab has been added just for directory scan results. Option to Import and Export Subdomains and export endpoints Interoperability is something every recon tool needs, and reNgine is no different. You will now be able to import subdomains from your private recon tools to any scan before you initiate. You will see this option to import the subdomain just after you choose the scan engine. In the same section, you will also see an option to exclude subdomains. We also now allow you to download subdomains, or just download subdomains marked as important, or just download subdomains that are interesting. This also applies to endpoints, you can download all endpoints, just download any endpoints that have certain GF patterns matched. Clean your scan results and screenshots I understand most of you run reNgine on your VPS, and it is very understandable that you wish to clean scan results, screenshots to save up some space. reNgine now allows you to clean up your scan data and/or screenshots. Enhanced and Customizable Scan alert with support for Slack, Discord & Telegram, also send recon data directly to Discord Notification in the earlier version of reNgine was not very efficient, and support was only for slack. reNgine 1.0 comes with support for Slack, Discord, and Telegram. You will also have an option to customize what kind of notification to be sent, only want vulnerability-related notifications? You can choose that, only want subdomains changes? You can choose them as well. You also have an option to upload these scan data directly to your discord. You can view the complete changelog here: https://github.com/yogeshojha/rengine/blob/master/CHANGELOG.md There are a lot more tiny improvements that I worked on for several months that are sure to give you a better experience, and let you stay ahead in the recon game! I really appreciate any feedback and suggestions.","title":"\ud83c\udff7\ufe0f 1.0"},{"location":"changelog/#053","text":"Release Date: Feb 25 2021 Build error for Naabu v2 Fixed Added rate support for Naabu","title":"\ud83c\udff7\ufe0f 0.5.3"},{"location":"changelog/#052","text":"Release Date: Feb 23 2021 Fixed XSS https://github.com/yogeshojha/rengine/issues/347","title":"\ud83c\udff7\ufe0f 0.5.2"},{"location":"changelog/#051","text":"Release Date: Feb 19 2021 Features Added Discord Support for Notification Web hooks","title":"\ud83c\udff7\ufe0f 0.5.1"},{"location":"changelog/#05","text":"Release Date: 29 Nov 2020 Nuclei Integration: v0.5 is primarily focused on vulnerability scanner using Nuclei. This was a long pending due and we've finally integrated it. Powerful search queries across endpoints, subdomains and vulnerability scan results: reNgine reconnaissance data can now be queried using operators like <,>,&,| and !, namely greater than, less than, and, or, and not. This is extremely useful in querying the recon data. More details can be found at Instructions to perform Queries on Recon data Out of scope options: Many of you have been asking for out of scope option. Thanks to Valerio Brussani for his pull request which made it possible for out of scope options. Please check the documentation on how to define out of scope options. Official Documentation(WIP): We often get asked on how to use reNgine. For long, we had no official documentation. Finally, I've worked on it and we have the official documentation at rengine.wiki The documentation is divided into two parts, for Developers and for Penetration Testers. For developers, it's a work in progress. I will keep you all updated throughout the process. Redefined Dashboard: We've also made some changes in the Dashboard. The additions include vulnerability scan results, most vulnerable targets, most common vulnerabilities. Global Search: This feature has been one of the most requested features for reNgine. Now you can search all the subdomains, endpoints, and vulnerabilities. OneForAll Support: reNgine now supports OneForAll for subdomain discovery, it is currently in beta. I am working on how to integrate OneForAll APIKeys and Configuration files. Configuration Support for subfinder: You will now have ability to add configurations for subfinder as well. Timeout option for aquatone: We added timeout options in yaml configuration as a lot of screenshots were missing. You can now define timeout for http, scan and screenshots for timeout in milliseconds. Design Changes A lot of design changes has happened in reNgine. Some of which are: Endpoints Results and Vulnerability Scan Results are now displayed as a separate page, this is to separate the results and decrease the page load time. Checkbox next to Subdomains and Vulnerability report list to change the status, this allows you to mark all subdomains and vulnerabilities that you've already completed working on. Sometimes due to timeout, aquatone was skipping the screenshots and due to that, navigations between screenshots was little annoying. We have fixed it as well. Ability to delete multiple targets and initiate multiple scans. Subdomain Takeover (Removed): As we decided to use Nuclei for Vulnerability Scanner, and also, since Subjack wasn't giving enough results, I decided to remove Subjack. The subdomain Takeover will now be part of Nuclei Vulnerability Scanner.","title":"\ud83c\udff7\ufe0f 0.5"},{"location":"changelog/#04","text":"Release Date: 2020-10-08 Features Background tasks migrated to Celery and redis Periodic and clocked scan added Ability to Stop and delete the scan CNAME and IP address added on detail scan Content type added on Endpoints section Ability to initiate multiple scans at a time","title":"\ud83c\udff7\ufe0f 0.4"},{"location":"changelog/#03","text":"Release Date: 2020-07-21 Features YAML based Customization Engine Ability to add wordlists Login Feature","title":"\ud83c\udff7\ufe0f 0.3"},{"location":"changelog/#02","text":"Release Date: 2020-07-11 Features Directory Search Enabled Fetch URLS using hakrawler Subdomain takeover using Subjack Add Bulk urls Delete Scan functionality Fix Windows Installation issue fixed Scrollbar Issue on small screens fixed","title":"\ud83c\udff7\ufe0f 0.2"},{"location":"changelog/#01","text":"Release Date: 2020-07-08 reNgine is released","title":"\ud83c\udff7\ufe0f 0.1"},{"location":"getting-started/","text":"reNgine installation for Hackers \u00b6 This section aims to answer some of the most frequently asked questions on installing reNgine. Attention It is recommended that you follow each steps to avoid encountering any errors/issues during the setup. This guide is divided into several sections based on the frequently asked questions: Running reNgine on local machine Running reNgine on VPS Running reNgine with your own managed database \u26a1 Quick Installation \u00b6 If you are on Ubuntu/VPS/Linux, install script is provided for quick installation. Follow \u26a1 Quick Installation instructions . Running reNgine on local machine \u00b6 Running reNgine on local machine is a very straight forward process. You'll neeed docker , docker-compose and make to build and run reNgine on local machine. Quick Installation for Linux Debian like Ubuntu If you are using Ubuntu or Kali as your base OS and wish to run reNgine on it, you may skip the prerequisites section, installation script is provided with this project that takes care of installing docker and its dependencies. Quick Installation Quick Install reNgine on Ubuntu or Kali Installing reNgine on Windows or Mac Running reNgine on VPS \u00b6 While the installation step should be very similar across all VPS providers, an example of running reNgine on DigitalOcean is provided. How to Install reNgine on DigitalOcean or any VPS Running reNgine with your own managed database \u00b6 This is related to a Github Issue It is a good idea to run reNgine using managed database, or remote database. Find how to use reNgine with managed/remote database","title":"Getting Started"},{"location":"getting-started/#rengine-installation-for-hackers","text":"This section aims to answer some of the most frequently asked questions on installing reNgine. Attention It is recommended that you follow each steps to avoid encountering any errors/issues during the setup. This guide is divided into several sections based on the frequently asked questions: Running reNgine on local machine Running reNgine on VPS Running reNgine with your own managed database","title":"reNgine installation for Hackers"},{"location":"getting-started/#quick-installation","text":"If you are on Ubuntu/VPS/Linux, install script is provided for quick installation. Follow \u26a1 Quick Installation instructions .","title":"\u26a1 Quick Installation"},{"location":"getting-started/#running-rengine-on-local-machine","text":"Running reNgine on local machine is a very straight forward process. You'll neeed docker , docker-compose and make to build and run reNgine on local machine. Quick Installation for Linux Debian like Ubuntu If you are using Ubuntu or Kali as your base OS and wish to run reNgine on it, you may skip the prerequisites section, installation script is provided with this project that takes care of installing docker and its dependencies. Quick Installation Quick Install reNgine on Ubuntu or Kali Installing reNgine on Windows or Mac","title":"Running reNgine on local machine"},{"location":"getting-started/#running-rengine-on-vps","text":"While the installation step should be very similar across all VPS providers, an example of running reNgine on DigitalOcean is provided. How to Install reNgine on DigitalOcean or any VPS","title":"Running reNgine on VPS"},{"location":"getting-started/#running-rengine-with-your-own-managed-database","text":"This is related to a Github Issue It is a good idea to run reNgine using managed database, or remote database. Find how to use reNgine with managed/remote database","title":"Running reNgine with your own managed database"},{"location":"api/","text":"Coming Soon \u00b6","title":"Index"},{"location":"api/#coming-soon","text":"","title":"Coming Soon"},{"location":"backup/","text":"Backup reNgine \u00b6 Backup/Dump database \u00b6 sudo docker exec -t rengine_db_1 pg_dumpall -c -U { DB_USER } > rengine_dump_.sql You will be prompted for a database password. This is not your reNgine login password. Please consider checking your .env file. Backup data volumes [Optional] \u00b6 Keep a copy of the following data volumes; - rengine_scan_results/ : To keep screenshots - rengine_gf_patterns/ : To keep custom gf patterns - rengine_nuclei_templates/ : To keep custom nuclei templates - rengine_tool_config/ : To keep tools config - rengine_wordlist/ : To keep custom wordlists Restore reNgine \u00b6 After installation of reNgine, run the following commands; sudo docker stop rengine_web_1 sudo docker exec -i rengine_db_1 psql -U { DB_USER } postgres -c \"DROP DATABASE rengine;\" sudo docker exec -i rengine_db_1 psql -U { DB_USER } postgres -c \"CREATE DATABASE rengine;\" cat { /path/to/rengine_dump_.sql } | sudo docker exec -i rengine_db_1 psql -U { DB_USER } -d rengine Replace the data volumes, if available. Finally, run the following commands from inside the reNgine directory; sudo make build && make up sudo make up Contributed by : nerrorsec","title":"Backup reNgine"},{"location":"backup/#backup-rengine","text":"","title":"Backup reNgine"},{"location":"backup/#backupdump-database","text":"sudo docker exec -t rengine_db_1 pg_dumpall -c -U { DB_USER } > rengine_dump_.sql You will be prompted for a database password. This is not your reNgine login password. Please consider checking your .env file.","title":"Backup/Dump database"},{"location":"backup/#backup-data-volumes-optional","text":"Keep a copy of the following data volumes; - rengine_scan_results/ : To keep screenshots - rengine_gf_patterns/ : To keep custom gf patterns - rengine_nuclei_templates/ : To keep custom nuclei templates - rengine_tool_config/ : To keep tools config - rengine_wordlist/ : To keep custom wordlists","title":"Backup data volumes [Optional]"},{"location":"backup/#restore-rengine","text":"After installation of reNgine, run the following commands; sudo docker stop rengine_web_1 sudo docker exec -i rengine_db_1 psql -U { DB_USER } postgres -c \"DROP DATABASE rengine;\" sudo docker exec -i rengine_db_1 psql -U { DB_USER } postgres -c \"CREATE DATABASE rengine;\" cat { /path/to/rengine_dump_.sql } | sudo docker exec -i rengine_db_1 psql -U { DB_USER } -d rengine Replace the data volumes, if available. Finally, run the following commands from inside the reNgine directory; sudo make build && make up sudo make up Contributed by : nerrorsec","title":"Restore reNgine"},{"location":"community/blog-videos/","text":"Blogs and Videos Published by the community \u00b6 Community Published Blogs \u00b6 Blog Publisher Language Hacker Tools: ReNgine \u2013 Automatic recon PINKDRACONIAN/Intigriti English ReNgine: Open source recon tool automates intel-gathering process for pen testers Stephen Pritchard/The Daily Swig/Portswigger English Rengine \u2013 A GUI Based Scanner for Web Application Shubham Goyal English Introducing reNgine \u2014 an automated reconnaissance framework BhavKaran/Secarmy English Community Published Videos \u00b6 Video Publisher Language Automated recon? ReNgine - Hacker Tools Intigriti English Bug bounty tools - Rengine - Bdarija Th3 Hacker News Bdarija Moroccan Arabic reNgine 1.0 @ BlackHat USA Yogesh Ojha English reNgine 0.5 @ BlackHat EU Yogesh Ojha English How to setup and use reNgine ( make up ERROR SOLVED !! ) ITech Prophecy English How do I submit my Blog or Videos? \u00b6 If you have written a blog or publised a usage video on reNgine, please let me know. I'd be more than happy to include here. Either send a pull request to reNgine Documentation or send me your blogs or video URLs to yogesh.ojha11 [@] gmail.com.","title":"Blogs and Videos Published by the community"},{"location":"community/blog-videos/#blogs-and-videos-published-by-the-community","text":"","title":"Blogs and Videos Published by the community"},{"location":"community/blog-videos/#community-published-blogs","text":"Blog Publisher Language Hacker Tools: ReNgine \u2013 Automatic recon PINKDRACONIAN/Intigriti English ReNgine: Open source recon tool automates intel-gathering process for pen testers Stephen Pritchard/The Daily Swig/Portswigger English Rengine \u2013 A GUI Based Scanner for Web Application Shubham Goyal English Introducing reNgine \u2014 an automated reconnaissance framework BhavKaran/Secarmy English","title":"Community Published Blogs"},{"location":"community/blog-videos/#community-published-videos","text":"Video Publisher Language Automated recon? ReNgine - Hacker Tools Intigriti English Bug bounty tools - Rengine - Bdarija Th3 Hacker News Bdarija Moroccan Arabic reNgine 1.0 @ BlackHat USA Yogesh Ojha English reNgine 0.5 @ BlackHat EU Yogesh Ojha English How to setup and use reNgine ( make up ERROR SOLVED !! ) ITech Prophecy English","title":"Community Published Videos"},{"location":"community/blog-videos/#how-do-i-submit-my-blog-or-videos","text":"If you have written a blog or publised a usage video on reNgine, please let me know. I'd be more than happy to include here. Either send a pull request to reNgine Documentation or send me your blogs or video URLs to yogesh.ojha11 [@] gmail.com.","title":"How do I submit my Blog or Videos?"},{"location":"community/discord/","text":"reNgine Community \u00b6 Discord Server \u00b6 Guidelines for using Discord: \u00b6 We can't answer questions like \"reNgine is not working!\" or \"reNgine fails to scan!\" unless you provide logs! Please be considerate and attach the logs when you ask questions. Please be respectful with community members. Channels: \u00b6 #general - Just anything about reNgine #development - Developer's Help Section #support - Limited support on Why reNgine is not working! How to join Discord \u00b6 Join our discord server here. Channels #general - Join here #development - Join here #support - Join here","title":"reNgine Community"},{"location":"community/discord/#rengine-community","text":"","title":"reNgine Community"},{"location":"community/discord/#discord-server","text":"","title":"Discord Server"},{"location":"community/discord/#guidelines-for-using-discord","text":"We can't answer questions like \"reNgine is not working!\" or \"reNgine fails to scan!\" unless you provide logs! Please be considerate and attach the logs when you ask questions. Please be respectful with community members.","title":"Guidelines for using Discord:"},{"location":"community/discord/#channels","text":"#general - Just anything about reNgine #development - Developer's Help Section #support - Limited support on Why reNgine is not working!","title":"Channels:"},{"location":"community/discord/#how-to-join-discord","text":"Join our discord server here. Channels #general - Join here #development - Join here #support - Join here","title":"How to join Discord"},{"location":"install/detailed/","text":"Installing reNgine on Linux/Windows/Mac \u00b6 This document aims to provide detailed instructions on setting up and running the reNgine . Attention If you wish to run reNgine on any debian Linux (like Ubuntu), there is a installation script that will ease your docker installation and does required setup for you. Consider using it. Quick Installation You can skip prerequisites if you are running Ubuntu This document is further divided into 3 parts: Prerequisites reNgine Installation Prerequisites \u00b6 reNgine uses several scripts and tools, those tools or scripts rely on various tools to be installed like Go, Python, etc, and to avoid any dependency issues, we decided to use Docker. Using Docker will not only ease the dependency issues but will also ease the installation steps. As a penetration tester, you need not focus on solving the dependencies, installing required tools, etc. With few installation steps, you should be good to run reNgine . reNgine requires docker , docker-compose and make to be installed before you begin installing rengine. Docker \u00b6 Docker provides very good documentation on how to install docker based on your Operating System. You can follow the documentation here. Docker installation on Ubuntu/Linux Distributions \u00b6 Warning The installation steps have been directly taken from Docker Guide with no modification. Update the apt package index and install the below packages sudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common Add Docker official GPG key curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Use the following commands to setup the stable repository sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" Finally install Docker Engine sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io Test the Docker by running docker command on your console/terminal. Docker installation on Windows \u00b6 Docker requires Docker Desktop to be installed on your Windows OS. Installing Docker Desktop is as easy as double clicking the InstallDocker.msi installer, downloaded from here . Docker installation on Mac OS \u00b6 Docker requires Docker Desktop to be installed on your Mac OS. Follow the instruction from Docker hub to install Docker on Mac OS . Docker installation on Windows WSL \u00b6 Nick Janetakis has a well written blog and a Video guide on how to install Docker on Windows Subsystem Linux . Please follow the video/blog guide on how to install Docker on WSL. Docker Compose \u00b6 If you're running Docker Desktop you can skip installing docker-compose as docker-compose comes along with Docker Desktop. This applies for both Windows and Mac OS users. If you're using Linux distributions or WSL, you will still need to install docker-compose and the installation steps are similar. Installing docker-compose on Linux systems \u00b6 Download the latest stable version of docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Apply executable permission sudo chmod +x /usr/local/bin/docker-compose Create a symbolic link sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Verify your installation by running docker-compose --version Info If curl is not working, there are alternate installation steps as well. You can use pip or install as a container. Follow the alternate installation steps . make \u00b6 make installation on Linux Distributions \u00b6 Install the latest version of make using sudo apt install make Although it is optional, build-essential package can also be installed which contains make utility. sudo apt install build-essential All prerequisites are now satisfied. Let's begin by cloning reNgine . Installation \u00b6 Clone reNgine \u00b6 git clone https://github.com/yogeshojha/rengine && cd rengine dotenv file \u00b6 Edit the dotenv file using nano .env or vi .env or vim .env . The sample .env file can be found here . # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta # # Database configurations # POSTGRES_DB=rengine POSTGRES_USER=rengine POSTGRES_PASSWORD=hE2a5@K&9nEY1fzgA6X POSTGRES_PORT=5432 POSTGRES_HOST=db # # Celery CONCURRENCY Autoscaling # The number of CONCURRENCY defines how many scans will run in parallel # Please always keep minimum of 5 # MIN_CONCURRENCY=5 MAX_CONCURRENCY=30 .env Explained \u00b6 COMPOSE_PROJECT_NAME : This will help reNgine name docker containers as rengine_web_1, rengine_celery_1 etc. (Making changes is Optional) AUTHORITY_NAME : SSL Authority Name AUTHORITY_PASSWORD : SSL Authority Password COMPANY : Company Name to generate SSL to DOMAIN_NAME : Domain where reNgine is going to be installed COUNTRY_CODE, STATE, CITY : SSL Speciffc POSTGRES_DB : DB name for Postgres (Making changes is Optional) POSTGRES_USER : Postgres Username for DB auth purpose (Making changes is Optional) POSTGRES_PASSWORD : Postgres Password for DB auth purpose (Please change the default Postgres Password) POSTGRES_PORT : Postgres Port (Making changes is Optional) POSTGRES_HOST : Postgres HOST (Making changes is Optional) MIN_CONCURRENCY : Minimum number of Concurrency for Celery. MAX_CONCURRENCY : Maximum number of Concurrency for Celery. This determines how many maximum number of scans to run in parallel. Determining CONCURRENCY Values \u00b6 Here is the ideal value for MIN_CONCURRENCY and MAX_CONCURRENCY depending on the number of RAM your machine has: 4GB : MAX_CONCURRENCY=10 8GB : MAX_CONCURRENCY=30 16GB : MAX_CONCURRENCY=50 This is just an ideal value which developers have tested and tried out and works! But feel free to play around with the values. Maximum number of scans is determined by various factors, your network bandwith, RAM, number of CPUs available. etc Generating SSL Certificates \u00b6 reNgine runs on https unless otherwise used for development purpose. Using https is recommended. To generate the certificates you can use sudo make certs Please note, while running any make command, you must be inside the rengine/ directory. Build reNgine \u00b6 To build the reNgine, use the following command sudo make build The build process is a lengthy process and expected to take some time. Thanks to Baptiste MOINE for sending the PR that made build process so much simpler. Run reNgine \u00b6 Once the build process is successful, we're good to run reNgine. This can be done using below command sudo make up reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address Registering an account \u00b6 You will need to create a username and password in order to login to the reNgine. To register reNgine, please run the following command sudo make username You will now be prompted with some personal details(optional), username and password. We highly recommend that you set a strong password for reNgine. You may now login to the reNgine web portal using the username and password that you just provided. Checking logs \u00b6 If you need to observe the logs, it can be done so by running the commmand sudo make logs Note If you encounter any issues while setup or scan, we advice you to raise an issue in Github and attach the log. While raising any new issues on Github, it is also adviced that you to look for any open issues on Github as well. Stopping reNgine \u00b6 If you wish to stop the reNgine, it can be done so by using the command sudo make stop Restarting reNgine \u00b6 reNgine can be restarted using the command sudo make restart Removing all reNgine Data \u00b6 If you wish to delete all your recon data, it can be done using Danger This is a irreversible process and once pruned, you may never get back your recon data. Use with caution. sudo make prune","title":"Installing reNgine on Linux/Windows/Mac"},{"location":"install/detailed/#installing-rengine-on-linuxwindowsmac","text":"This document aims to provide detailed instructions on setting up and running the reNgine . Attention If you wish to run reNgine on any debian Linux (like Ubuntu), there is a installation script that will ease your docker installation and does required setup for you. Consider using it. Quick Installation You can skip prerequisites if you are running Ubuntu This document is further divided into 3 parts: Prerequisites reNgine Installation","title":"Installing reNgine on Linux/Windows/Mac"},{"location":"install/detailed/#prerequisites","text":"reNgine uses several scripts and tools, those tools or scripts rely on various tools to be installed like Go, Python, etc, and to avoid any dependency issues, we decided to use Docker. Using Docker will not only ease the dependency issues but will also ease the installation steps. As a penetration tester, you need not focus on solving the dependencies, installing required tools, etc. With few installation steps, you should be good to run reNgine . reNgine requires docker , docker-compose and make to be installed before you begin installing rengine.","title":"Prerequisites"},{"location":"install/detailed/#docker","text":"Docker provides very good documentation on how to install docker based on your Operating System. You can follow the documentation here.","title":"Docker"},{"location":"install/detailed/#docker-installation-on-ubuntulinux-distributions","text":"Warning The installation steps have been directly taken from Docker Guide with no modification. Update the apt package index and install the below packages sudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common Add Docker official GPG key curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Use the following commands to setup the stable repository sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" Finally install Docker Engine sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io Test the Docker by running docker command on your console/terminal.","title":"Docker installation on Ubuntu/Linux Distributions"},{"location":"install/detailed/#docker-installation-on-windows","text":"Docker requires Docker Desktop to be installed on your Windows OS. Installing Docker Desktop is as easy as double clicking the InstallDocker.msi installer, downloaded from here .","title":"Docker installation on Windows"},{"location":"install/detailed/#docker-installation-on-mac-os","text":"Docker requires Docker Desktop to be installed on your Mac OS. Follow the instruction from Docker hub to install Docker on Mac OS .","title":"Docker installation on Mac OS"},{"location":"install/detailed/#docker-installation-on-windows-wsl","text":"Nick Janetakis has a well written blog and a Video guide on how to install Docker on Windows Subsystem Linux . Please follow the video/blog guide on how to install Docker on WSL.","title":"Docker installation on Windows WSL"},{"location":"install/detailed/#docker-compose","text":"If you're running Docker Desktop you can skip installing docker-compose as docker-compose comes along with Docker Desktop. This applies for both Windows and Mac OS users. If you're using Linux distributions or WSL, you will still need to install docker-compose and the installation steps are similar.","title":"Docker Compose"},{"location":"install/detailed/#installing-docker-compose-on-linux-systems","text":"Download the latest stable version of docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Apply executable permission sudo chmod +x /usr/local/bin/docker-compose Create a symbolic link sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Verify your installation by running docker-compose --version Info If curl is not working, there are alternate installation steps as well. You can use pip or install as a container. Follow the alternate installation steps .","title":"Installing docker-compose on Linux systems"},{"location":"install/detailed/#make","text":"","title":"make"},{"location":"install/detailed/#make-installation-on-linux-distributions","text":"Install the latest version of make using sudo apt install make Although it is optional, build-essential package can also be installed which contains make utility. sudo apt install build-essential All prerequisites are now satisfied. Let's begin by cloning reNgine .","title":"make installation on Linux Distributions"},{"location":"install/detailed/#installation","text":"","title":"Installation"},{"location":"install/detailed/#clone-rengine","text":"git clone https://github.com/yogeshojha/rengine && cd rengine","title":"Clone reNgine"},{"location":"install/detailed/#dotenv-file","text":"Edit the dotenv file using nano .env or vi .env or vim .env . The sample .env file can be found here . # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta # # Database configurations # POSTGRES_DB=rengine POSTGRES_USER=rengine POSTGRES_PASSWORD=hE2a5@K&9nEY1fzgA6X POSTGRES_PORT=5432 POSTGRES_HOST=db # # Celery CONCURRENCY Autoscaling # The number of CONCURRENCY defines how many scans will run in parallel # Please always keep minimum of 5 # MIN_CONCURRENCY=5 MAX_CONCURRENCY=30","title":"dotenv file"},{"location":"install/detailed/#env-explained","text":"COMPOSE_PROJECT_NAME : This will help reNgine name docker containers as rengine_web_1, rengine_celery_1 etc. (Making changes is Optional) AUTHORITY_NAME : SSL Authority Name AUTHORITY_PASSWORD : SSL Authority Password COMPANY : Company Name to generate SSL to DOMAIN_NAME : Domain where reNgine is going to be installed COUNTRY_CODE, STATE, CITY : SSL Speciffc POSTGRES_DB : DB name for Postgres (Making changes is Optional) POSTGRES_USER : Postgres Username for DB auth purpose (Making changes is Optional) POSTGRES_PASSWORD : Postgres Password for DB auth purpose (Please change the default Postgres Password) POSTGRES_PORT : Postgres Port (Making changes is Optional) POSTGRES_HOST : Postgres HOST (Making changes is Optional) MIN_CONCURRENCY : Minimum number of Concurrency for Celery. MAX_CONCURRENCY : Maximum number of Concurrency for Celery. This determines how many maximum number of scans to run in parallel.","title":".env Explained"},{"location":"install/detailed/#determining-concurrency-values","text":"Here is the ideal value for MIN_CONCURRENCY and MAX_CONCURRENCY depending on the number of RAM your machine has: 4GB : MAX_CONCURRENCY=10 8GB : MAX_CONCURRENCY=30 16GB : MAX_CONCURRENCY=50 This is just an ideal value which developers have tested and tried out and works! But feel free to play around with the values. Maximum number of scans is determined by various factors, your network bandwith, RAM, number of CPUs available. etc","title":"Determining CONCURRENCY Values"},{"location":"install/detailed/#generating-ssl-certificates","text":"reNgine runs on https unless otherwise used for development purpose. Using https is recommended. To generate the certificates you can use sudo make certs Please note, while running any make command, you must be inside the rengine/ directory.","title":"Generating SSL Certificates"},{"location":"install/detailed/#build-rengine","text":"To build the reNgine, use the following command sudo make build The build process is a lengthy process and expected to take some time. Thanks to Baptiste MOINE for sending the PR that made build process so much simpler.","title":"Build reNgine"},{"location":"install/detailed/#run-rengine","text":"Once the build process is successful, we're good to run reNgine. This can be done using below command sudo make up reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address","title":"Run reNgine"},{"location":"install/detailed/#registering-an-account","text":"You will need to create a username and password in order to login to the reNgine. To register reNgine, please run the following command sudo make username You will now be prompted with some personal details(optional), username and password. We highly recommend that you set a strong password for reNgine. You may now login to the reNgine web portal using the username and password that you just provided.","title":"Registering an account"},{"location":"install/detailed/#checking-logs","text":"If you need to observe the logs, it can be done so by running the commmand sudo make logs Note If you encounter any issues while setup or scan, we advice you to raise an issue in Github and attach the log. While raising any new issues on Github, it is also adviced that you to look for any open issues on Github as well.","title":"Checking logs"},{"location":"install/detailed/#stopping-rengine","text":"If you wish to stop the reNgine, it can be done so by using the command sudo make stop","title":"Stopping reNgine"},{"location":"install/detailed/#restarting-rengine","text":"reNgine can be restarted using the command sudo make restart","title":"Restarting reNgine"},{"location":"install/detailed/#removing-all-rengine-data","text":"If you wish to delete all your recon data, it can be done using Danger This is a irreversible process and once pruned, you may never get back your recon data. Use with caution. sudo make prune","title":"Removing all reNgine Data"},{"location":"install/quick/","text":"Quick Install reNgine on Ubuntu \u00b6 Clone reNgine git clone https://github.com/yogeshojha/rengine && cd rengine Attention please make sure to change the password for postgresql POSTGRES_PASSWORD ! Edit the dotenv file using nano .env or vi .env or vim .env . Sample .env file # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta # # Database configurations # POSTGRES_DB=rengine POSTGRES_USER=rengine POSTGRES_PASSWORD=hE2a5@K&9nEY1fzgA6X POSTGRES_PORT=5432 POSTGRES_HOST=db # # Celery CONCURRENCY Autoscaling # The number of CONCURRENCY defines how many scans will run in parallel # Please always keep minimum of 5 # MIN_CONCURRENCY=5 MAX_CONCURRENCY=30 .env Explained \u00b6 COMPOSE_PROJECT_NAME : This will help reNgine name docker containers as rengine_web_1, rengine_celery_1 etc. (Making changes is Optional) AUTHORITY_NAME : SSL Authority Name AUTHORITY_PASSWORD : SSL Authority Password COMPANY : Company Name to generate SSL to DOMAIN_NAME : Domain where reNgine is going to be installed COUNTRY_CODE, STATE, CITY : SSL Speciffc POSTGRES_DB : DB name for Postgres (Making changes is Optional) POSTGRES_USER : Postgres Username for DB auth purpose (Making changes is Optional) POSTGRES_PASSWORD : Postgres Password for DB auth purpose (Please change the default Postgres Password) POSTGRES_PORT : Postgres Port (Making changes is Optional) POSTGRES_HOST : Postgres HOST (Making changes is Optional) MIN_CONCURRENCY : Minimum number of Concurrency for Celery. MAX_CONCURRENCY : Maximum number of Concurrency for Celery. This determines how many maximum number of scans to run in parallel. Determining CONCURRENCY Values \u00b6 Here is the ideal value for MIN_CONCURRENCY and MAX_CONCURRENCY depending on the number of RAM your machine has: 4GB : MAX_CONCURRENCY=10 8GB : MAX_CONCURRENCY=30 16GB : MAX_CONCURRENCY=50 This is just an ideal value which developers have tested and tried out and works! But feel free to play around with the values. Maximum number of scans is determined by various factors, your network bandwith, RAM, number of CPUs available. etc Run the installation script, Please keep an eye for any prompt, you will also be asked for username and password for reNgine UI. sudo ./install.sh if ./install.sh does not have install permission, please add executable permission, chmod +x install.sh You will be asked to create account for reNgine, please choose a strong password. reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address","title":"Quick Install reNgine on Ubuntu"},{"location":"install/quick/#quick-install-rengine-on-ubuntu","text":"Clone reNgine git clone https://github.com/yogeshojha/rengine && cd rengine Attention please make sure to change the password for postgresql POSTGRES_PASSWORD ! Edit the dotenv file using nano .env or vi .env or vim .env . Sample .env file # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta # # Database configurations # POSTGRES_DB=rengine POSTGRES_USER=rengine POSTGRES_PASSWORD=hE2a5@K&9nEY1fzgA6X POSTGRES_PORT=5432 POSTGRES_HOST=db # # Celery CONCURRENCY Autoscaling # The number of CONCURRENCY defines how many scans will run in parallel # Please always keep minimum of 5 # MIN_CONCURRENCY=5 MAX_CONCURRENCY=30","title":"Quick Install reNgine on Ubuntu"},{"location":"install/quick/#env-explained","text":"COMPOSE_PROJECT_NAME : This will help reNgine name docker containers as rengine_web_1, rengine_celery_1 etc. (Making changes is Optional) AUTHORITY_NAME : SSL Authority Name AUTHORITY_PASSWORD : SSL Authority Password COMPANY : Company Name to generate SSL to DOMAIN_NAME : Domain where reNgine is going to be installed COUNTRY_CODE, STATE, CITY : SSL Speciffc POSTGRES_DB : DB name for Postgres (Making changes is Optional) POSTGRES_USER : Postgres Username for DB auth purpose (Making changes is Optional) POSTGRES_PASSWORD : Postgres Password for DB auth purpose (Please change the default Postgres Password) POSTGRES_PORT : Postgres Port (Making changes is Optional) POSTGRES_HOST : Postgres HOST (Making changes is Optional) MIN_CONCURRENCY : Minimum number of Concurrency for Celery. MAX_CONCURRENCY : Maximum number of Concurrency for Celery. This determines how many maximum number of scans to run in parallel.","title":".env Explained"},{"location":"install/quick/#determining-concurrency-values","text":"Here is the ideal value for MIN_CONCURRENCY and MAX_CONCURRENCY depending on the number of RAM your machine has: 4GB : MAX_CONCURRENCY=10 8GB : MAX_CONCURRENCY=30 16GB : MAX_CONCURRENCY=50 This is just an ideal value which developers have tested and tried out and works! But feel free to play around with the values. Maximum number of scans is determined by various factors, your network bandwith, RAM, number of CPUs available. etc Run the installation script, Please keep an eye for any prompt, you will also be asked for username and password for reNgine UI. sudo ./install.sh if ./install.sh does not have install permission, please add executable permission, chmod +x install.sh You will be asked to create account for reNgine, please choose a strong password. reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address","title":"Determining CONCURRENCY Values"},{"location":"install/remotedb/","text":"Using Remote Database with reNgine \u00b6 Related to Github Issue If you plan to use remote database please follow the instructions. An example using DigitalOcean Managed database is below: Please consider joining DigitalOcean using my referral link your profit is $100 and I get $25 DO credit. This will help me test reNgine on VPS before I release any major features. Please note that reNgine is tested and built on top of postgreSQL database. I can not guarantee if reNgine works with other database. If you gave it a try and did work, please let me know, I'll update this section. Please carry out these steps before installing reNgine Create a database cluster. Login to your digitalocean account and click on Databases on left navigation menu. Click on Create Database Cluster button. Choose PostgreSQL Click on Create Database Cluster button. Click on Get Started. Choose your inbound connection to the database cluster. This must be either VPS IP address or IP address of your local machine wherever reNgine is running. Note down your credentials, you'll need to put these details in .env file. Also, if your managed database only connects via SSL, please click on Download CA certificate. Finish the steps. Now you have a managed database cluster, and you need these credentials to put it in .env file. Sample .env file with managed database cluster credentials COMPOSE_PROJECT_NAME=rengine AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta POSTGRES_DB=defaultdb POSTGRES_USER=doadmin POSTGRES_PASSWORD=sfga69d121960is9cs9kc POSTGRES_PORT=5432 POSTGRES_HOST=db-postgresql-nyc3-XXXXX-do-user-8362215-0.b.db.ondigitalocean.com MIN_CONCURRENCY=5 MAX_CONCURRENCY=30 That is all you need, You should now be able to connect to the database from reNgine, But, if you databases uses SSL connection, there is an extra step to be done. Move your CA certificate to reNgine's web root directory cd rengine/web && mv ~/Downloads/ca-certificate.crt . Open reNgine settings.py file inside rengine/web/reNgine Find this line DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': os.environ.get('POSTGRES_DB'), 'USER': os.environ.get('POSTGRES_USER'), 'PASSWORD': os.environ.get('POSTGRES_PASSWORD'), 'HOST': os.environ.get('POSTGRES_HOST'), 'PORT': os.environ.get('POSTGRES_PORT'), # 'OPTIONS':{ # 'sslmode':'verify-full', # 'sslrootcert': os.path.join(BASE_DIR, 'ca-certificate.crt') # } } } and uncomment OPTIONS as below. DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': os.environ.get('POSTGRES_DB'), 'USER': os.environ.get('POSTGRES_USER'), 'PASSWORD': os.environ.get('POSTGRES_PASSWORD'), 'HOST': os.environ.get('POSTGRES_HOST'), 'PORT': os.environ.get('POSTGRES_PORT'), 'OPTIONS':{ 'sslmode':'verify-full', 'sslrootcert': os.path.join(BASE_DIR, 'ca-certificate.crt') } } } Now you can continue with Quick Installation or Detailed Installation Instructions","title":"Using Remote Database with reNgine"},{"location":"install/remotedb/#using-remote-database-with-rengine","text":"Related to Github Issue If you plan to use remote database please follow the instructions. An example using DigitalOcean Managed database is below: Please consider joining DigitalOcean using my referral link your profit is $100 and I get $25 DO credit. This will help me test reNgine on VPS before I release any major features. Please note that reNgine is tested and built on top of postgreSQL database. I can not guarantee if reNgine works with other database. If you gave it a try and did work, please let me know, I'll update this section. Please carry out these steps before installing reNgine Create a database cluster. Login to your digitalocean account and click on Databases on left navigation menu. Click on Create Database Cluster button. Choose PostgreSQL Click on Create Database Cluster button. Click on Get Started. Choose your inbound connection to the database cluster. This must be either VPS IP address or IP address of your local machine wherever reNgine is running. Note down your credentials, you'll need to put these details in .env file. Also, if your managed database only connects via SSL, please click on Download CA certificate. Finish the steps. Now you have a managed database cluster, and you need these credentials to put it in .env file. Sample .env file with managed database cluster credentials COMPOSE_PROJECT_NAME=rengine AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=nSrmNkwT COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=US STATE=Georgia CITY=Atlanta POSTGRES_DB=defaultdb POSTGRES_USER=doadmin POSTGRES_PASSWORD=sfga69d121960is9cs9kc POSTGRES_PORT=5432 POSTGRES_HOST=db-postgresql-nyc3-XXXXX-do-user-8362215-0.b.db.ondigitalocean.com MIN_CONCURRENCY=5 MAX_CONCURRENCY=30 That is all you need, You should now be able to connect to the database from reNgine, But, if you databases uses SSL connection, there is an extra step to be done. Move your CA certificate to reNgine's web root directory cd rengine/web && mv ~/Downloads/ca-certificate.crt . Open reNgine settings.py file inside rengine/web/reNgine Find this line DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': os.environ.get('POSTGRES_DB'), 'USER': os.environ.get('POSTGRES_USER'), 'PASSWORD': os.environ.get('POSTGRES_PASSWORD'), 'HOST': os.environ.get('POSTGRES_HOST'), 'PORT': os.environ.get('POSTGRES_PORT'), # 'OPTIONS':{ # 'sslmode':'verify-full', # 'sslrootcert': os.path.join(BASE_DIR, 'ca-certificate.crt') # } } } and uncomment OPTIONS as below. DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'NAME': os.environ.get('POSTGRES_DB'), 'USER': os.environ.get('POSTGRES_USER'), 'PASSWORD': os.environ.get('POSTGRES_PASSWORD'), 'HOST': os.environ.get('POSTGRES_HOST'), 'PORT': os.environ.get('POSTGRES_PORT'), 'OPTIONS':{ 'sslmode':'verify-full', 'sslrootcert': os.path.join(BASE_DIR, 'ca-certificate.crt') } } } Now you can continue with Quick Installation or Detailed Installation Instructions","title":"Using Remote Database with reNgine"},{"location":"install/vps/","text":"Installing reNgine on VPS \u00b6 The installation steps for installing reNgine on any VPS should be very similar. An example using DigitalOcean is given below. Join DigitalOcean using my referral link your profit is $100 and I get $25 DO credit. This will help me test reNgine on VPS before I release any major features. Login to your DigitalOcean account. Click on Create on top right corner and Click on Droplets Choose Ubuntu Depending on your monthly budget, choose a plan. Consider atlease 80GB NVMe, 4GB RAM and 2 CPU. Recommended 160GB, 8GB RAM and 4 CPU. Choose Authentication of your choice. I recommend using SSH Keys, you may also use password. Click on Create Droplet Your VPS has been created Please note down the IP address. You will need this IP address to ssh into. Open your terminal or putty and ssh into this IP address ssh root@vps_ip Once you are logged into your VPS, follow Quick Installation instructions","title":"Installing reNgine on VPS"},{"location":"install/vps/#installing-rengine-on-vps","text":"The installation steps for installing reNgine on any VPS should be very similar. An example using DigitalOcean is given below. Join DigitalOcean using my referral link your profit is $100 and I get $25 DO credit. This will help me test reNgine on VPS before I release any major features. Login to your DigitalOcean account. Click on Create on top right corner and Click on Droplets Choose Ubuntu Depending on your monthly budget, choose a plan. Consider atlease 80GB NVMe, 4GB RAM and 2 CPU. Recommended 160GB, 8GB RAM and 4 CPU. Choose Authentication of your choice. I recommend using SSH Keys, you may also use password. Click on Create Droplet Your VPS has been created Please note down the IP address. You will need this IP address to ssh into. Open your terminal or putty and ssh into this IP address ssh root@vps_ip Once you are logged into your VPS, follow Quick Installation instructions","title":"Installing reNgine on VPS"},{"location":"security/","text":"Report Security Vulnerabilities in reNgine \u00b6 Introduction \u00b6 Security Researchers, welcome onboard! I am excited to announce bug bounty program for reNgine in collaboration with huntr.dev , this means you'll be rewarded for any security vulnerabilities discovered in reNgine. Thank you for your interest in reporting vulnerabilities to reNgine! If you are aware of potential security vulnerabilities within reNgine, we encourage you to report immediately via huntr.dev Danger Please do not disclose any vulnerabilities via Github Issues/Blogs/Tweets after/before reporting on huntr.dev as it is explicitly against huntr.dev and reNgine disclosure policy and will not be eligible for monetary rewards. Please note that the maintainer of reNgine does not determine the bounty amount. The bounty reward is determined by industry-first equation from huntr.dev to understand the popularity, impact and value of repositories to the open source community. Expectation from Security Researchers \u00b6 Patience: Please note that currently I am the only maintainer in reNgine and will take sometime to validate your report. I request your patience throughout the process. Respect Privacy and Security Reports: Please do not disclose any vulnerabilities in public (this also includes github issues) before or after reporting on huntr.dev! That is against the disclosure policy and will not be eligible for monetary rewards. Respect the rules What do Security Researchers get in return \u00b6 Much thanks from Maintainer Monetary Rewards CVE ID(s) Please find the FAQ and Responsible disclosure policy from huntr.dev. How do I report? \u00b6 You can report the security vulnerabilities from here . Past Security Vulnerabilities \u00b6 Thanks to these individuals for reporting Security Issues in reNgine. 2022 \u00b6 [HIGH] Blind command injection in CMS Detector, Reported by Abdulrahman Abdullah [HIGH] Command Injection in via Proxy, Reported by Koen Molenaar [HIGH] Command Injection in via YAML Engine, Reported by Koen Molenaar and zongdeiqianxing [LOW] Stored XSS on Import Targets via filename, Reported by Veeshraj Ghimire [LOW] Stored XSS on HackerOne Markdown template, Reported by Smaran Chand and Ayoub Elaich [LOW] Stored XSS via Scan Engine Name, Reported by nerrorsec [LOW] HTML Injection in Subscan, Reported by nerrorsec 2021 \u00b6 [LOW] Stored XSS on Detail Scan Page via Page Title Parameter, Reported by omemishra [LOW] Stored XSS on Vulnerability Scan page via URL Parameter, Reported by Arif Khan, payloadartist [LOW] Several Instances of XSS in reNgine 1.0 (#460, #459, #458, #457, #456, #455), Reported by Binit Ghimire [LOW] Stored XSS on GF Pattern via filename, Reported by nerrorsec [LOW] Stored XSS on Delete Scheduled Task via Scan Engine Name, Reported by nerrorsec [LOW] Stored XSS on Target Summary via Todo, Reported by TheLabda [LOW] Stored XSS on Nuclei Template Summary via maliclous Nuclei Template, Reported by Walleson Moura [MEDIUM] Path Traversal/LFI , reported by Koen Molenaar","title":"Report Security Vulnerabilities in reNgine"},{"location":"security/#report-security-vulnerabilities-in-rengine","text":"","title":"Report Security Vulnerabilities in reNgine"},{"location":"security/#introduction","text":"Security Researchers, welcome onboard! I am excited to announce bug bounty program for reNgine in collaboration with huntr.dev , this means you'll be rewarded for any security vulnerabilities discovered in reNgine. Thank you for your interest in reporting vulnerabilities to reNgine! If you are aware of potential security vulnerabilities within reNgine, we encourage you to report immediately via huntr.dev Danger Please do not disclose any vulnerabilities via Github Issues/Blogs/Tweets after/before reporting on huntr.dev as it is explicitly against huntr.dev and reNgine disclosure policy and will not be eligible for monetary rewards. Please note that the maintainer of reNgine does not determine the bounty amount. The bounty reward is determined by industry-first equation from huntr.dev to understand the popularity, impact and value of repositories to the open source community.","title":"Introduction"},{"location":"security/#expectation-from-security-researchers","text":"Patience: Please note that currently I am the only maintainer in reNgine and will take sometime to validate your report. I request your patience throughout the process. Respect Privacy and Security Reports: Please do not disclose any vulnerabilities in public (this also includes github issues) before or after reporting on huntr.dev! That is against the disclosure policy and will not be eligible for monetary rewards. Respect the rules","title":"Expectation from Security Researchers"},{"location":"security/#what-do-security-researchers-get-in-return","text":"Much thanks from Maintainer Monetary Rewards CVE ID(s) Please find the FAQ and Responsible disclosure policy from huntr.dev.","title":"What do Security Researchers get in return"},{"location":"security/#how-do-i-report","text":"You can report the security vulnerabilities from here .","title":"How do I report?"},{"location":"security/#past-security-vulnerabilities","text":"Thanks to these individuals for reporting Security Issues in reNgine.","title":"Past Security Vulnerabilities"},{"location":"security/#2022","text":"[HIGH] Blind command injection in CMS Detector, Reported by Abdulrahman Abdullah [HIGH] Command Injection in via Proxy, Reported by Koen Molenaar [HIGH] Command Injection in via YAML Engine, Reported by Koen Molenaar and zongdeiqianxing [LOW] Stored XSS on Import Targets via filename, Reported by Veeshraj Ghimire [LOW] Stored XSS on HackerOne Markdown template, Reported by Smaran Chand and Ayoub Elaich [LOW] Stored XSS via Scan Engine Name, Reported by nerrorsec [LOW] HTML Injection in Subscan, Reported by nerrorsec","title":"2022"},{"location":"security/#2021","text":"[LOW] Stored XSS on Detail Scan Page via Page Title Parameter, Reported by omemishra [LOW] Stored XSS on Vulnerability Scan page via URL Parameter, Reported by Arif Khan, payloadartist [LOW] Several Instances of XSS in reNgine 1.0 (#460, #459, #458, #457, #456, #455), Reported by Binit Ghimire [LOW] Stored XSS on GF Pattern via filename, Reported by nerrorsec [LOW] Stored XSS on Delete Scheduled Task via Scan Engine Name, Reported by nerrorsec [LOW] Stored XSS on Target Summary via Todo, Reported by TheLabda [LOW] Stored XSS on Nuclei Template Summary via maliclous Nuclei Template, Reported by Walleson Moura [MEDIUM] Path Traversal/LFI , reported by Koen Molenaar","title":"2021"},{"location":"uninstall/","text":"Uninstalling reNgine \u00b6 Uninstall script for reNgine is provided with project. Go to your reNgine root directory. cd script sudo ./uninstall.sh Thank you for using reNgine. If you no longer wish to use reNgine for your recon, please consider using these related projects. ReconFTW Reconmap","title":"Uninstalling reNgine"},{"location":"uninstall/#uninstalling-rengine","text":"Uninstall script for reNgine is provided with project. Go to your reNgine root directory. cd script sudo ./uninstall.sh Thank you for using reNgine. If you no longer wish to use reNgine for your recon, please consider using these related projects. ReconFTW Reconmap","title":"Uninstalling reNgine"},{"location":"update/","text":"Updating reNgine \u00b6 Tips You can always update reNgine to the latest release unless otherwise stated in the changelog . Please ensure backwards compatibility before updating reNgine. What happens is reNgine is not backwards compatible? Like major release 1.0, reNgine is not backwards compatible. This is due to many changes added in reNgine and to skip worrying about django migrations and other configuration issues, sometimes (some major releases) may not be backwards compatible. In this case, please do not update/upgrade reNgine. Please do a fresh installation. \u26a1 Quick Update \u00b6 Updating is as simple as running the following command: Go to your reNgine root directory. cd script sudo ./update.sh Follow the update prompts Rebuild the latest changes make build Start reNgine services make up","title":"Updating reNgine"},{"location":"update/#updating-rengine","text":"Tips You can always update reNgine to the latest release unless otherwise stated in the changelog . Please ensure backwards compatibility before updating reNgine. What happens is reNgine is not backwards compatible? Like major release 1.0, reNgine is not backwards compatible. This is due to many changes added in reNgine and to skip worrying about django migrations and other configuration issues, sometimes (some major releases) may not be backwards compatible. In this case, please do not update/upgrade reNgine. Please do a fresh installation.","title":"Updating reNgine"},{"location":"update/#quick-update","text":"Updating is as simple as running the following command: Go to your reNgine root directory. cd script sudo ./update.sh Follow the update prompts Rebuild the latest changes make build Start reNgine services make up","title":"\u26a1 Quick Update"},{"location":"usage/","text":"Using reNgine \u00b6 Please refer to this section only after reNgine installation is successful. This section is divided into several parts based on modules/features/FAQ in reNgine. Projects What are projects and how to use projects? Multiple Users, Roles and Permissions What are roles and permissions and how to add users and assign roles? Adding Targets How to add targets? What is hackerone team-handle? Tagging Targets to an Organization How to tag targets to an organization? How to initiate scan for an organization? Scan Engines Scan Engine YAML configuration Explained Shared Configurations Initiating Scan Initiating SubScan Scheduling Scan Wordlist Interesting Lookup Automatic Vulnerability Reporting to Hackerone How to edit vulnerability report template? What is team handle? Adding External Tools Generating PDF Report Settings Proxy Settings How to add and use proxies? Tool Settings How to upload GF and Nuclei templates? How to edit tool specific settings/configuration for subfinder, nuclei, amass and naabu Notification Settings (Customizing Notifications) reNgine Settings (Cleaning the Scan Data and Screenshots) Updating reNgine Uninstalling reNgine How to report Security Issues in reNgine","title":"Usage"},{"location":"usage/#using-rengine","text":"Please refer to this section only after reNgine installation is successful. This section is divided into several parts based on modules/features/FAQ in reNgine. Projects What are projects and how to use projects? Multiple Users, Roles and Permissions What are roles and permissions and how to add users and assign roles? Adding Targets How to add targets? What is hackerone team-handle? Tagging Targets to an Organization How to tag targets to an organization? How to initiate scan for an organization? Scan Engines Scan Engine YAML configuration Explained Shared Configurations Initiating Scan Initiating SubScan Scheduling Scan Wordlist Interesting Lookup Automatic Vulnerability Reporting to Hackerone How to edit vulnerability report template? What is team handle? Adding External Tools Generating PDF Report Settings Proxy Settings How to add and use proxies? Tool Settings How to upload GF and Nuclei templates? How to edit tool specific settings/configuration for subfinder, nuclei, amass and naabu Notification Settings (Customizing Notifications) reNgine Settings (Cleaning the Scan Data and Screenshots) Updating reNgine Uninstalling reNgine How to report Security Issues in reNgine","title":"Using reNgine"},{"location":"usage/external-tool/","text":"reNgine supports adding external subdomain discovery tools. Tools can be fetched from either Github or Go. Click on Settings > Tools Arsenal Section. Arsenal Section is dedicated for external tools that reNgine uses. You can use this section to update the tools or add any external tools. Click on Add New Tool button. Add tool Fields \u00b6 Tool Name: Your tool Name Tool Category: If your tool is a subdomain gathering tool, you need to choose this yes. Github URL: Tool Github URL Tool Logo URL: Tool Logo URL Ex. https://toolname.com/logo.png Tool License URL: Tool License URL Ex. https://github.com/yogeshojha/rengine/blob/master/LICENSE Description: Tool Description, what this tool does. Installation Command: Installation commands such as git clone or curl or pip or go get . If the tool has to be installed using github clone, then your installation command would be git clone https://github.com/user/tool If the tool has to be installed using go, the your installation command would be go install -v github.com/tool@latest Danger Please note that, go get command is no longer supported by go. Instead you should use go install. Learn why! Update Command: Update command for the tool. If the tool was installed using git clone, it is recommended to use git pull for updating. If the tool was installed using go, it is recommended to use the same command as go install. If the tool has any other update command, you can also use them here. Version Lookup Command: This will be used for determining the current version and compare with the latest version and to notify if any tool update is available. Examples include python3 tool.py -v tool -v tool --version Version Match Regex: reNgine needs version match regex to find out if there is any update available or not. You can check how the tool displays the version number and we can generate the regex for you, or you can do that manually as well. If version regex is not given, reNgine will not be able to check the updates automatically. However, you can still force update the tools. See, how the tool names the release version. https://github.com/user/tool/releases For version numbers like v1.2/V1.2/1.2 use regex [vV]*(d+.)?(d+.) For version numbers like v1.2.3/V1.2.3/1.2.3 use regex [vV]*(d+.)?(d+.)?(*|d+) For version numbers like v1.2.3.4/V1.2.3.4/1.2.3.4 use regex [vV]*(d+.)?(d+.)?(*|d+)?(*|d+) Subdomain Gathering Command: reNgine needs to know how this tool accepts target and output the subdomain results. Use the below syntax wherever required. {PATH}, Use this if your tool is github cloned. Example. python3 {PATH}/subdomain.py {TARGET}, Use this for the command-line arg that takes in domain as input target. Example. subfinder -d {TARGET} {OUTPUT}, Use this for the command-line arg that takes the output arg. Example. subfinder -d {TARGET} -o {OUTPUT} {PROXY}, Use this if your tool supports proxy. Example. tool_name -p {PROXY} You can use the combinations of the above syntax and also you can use any other command-line argument that your tool supports. To use this tool, simply use this toolname on Scan Engine uses_tools section.","title":"External tool"},{"location":"usage/external-tool/#add-tool-fields","text":"Tool Name: Your tool Name Tool Category: If your tool is a subdomain gathering tool, you need to choose this yes. Github URL: Tool Github URL Tool Logo URL: Tool Logo URL Ex. https://toolname.com/logo.png Tool License URL: Tool License URL Ex. https://github.com/yogeshojha/rengine/blob/master/LICENSE Description: Tool Description, what this tool does. Installation Command: Installation commands such as git clone or curl or pip or go get . If the tool has to be installed using github clone, then your installation command would be git clone https://github.com/user/tool If the tool has to be installed using go, the your installation command would be go install -v github.com/tool@latest Danger Please note that, go get command is no longer supported by go. Instead you should use go install. Learn why! Update Command: Update command for the tool. If the tool was installed using git clone, it is recommended to use git pull for updating. If the tool was installed using go, it is recommended to use the same command as go install. If the tool has any other update command, you can also use them here. Version Lookup Command: This will be used for determining the current version and compare with the latest version and to notify if any tool update is available. Examples include python3 tool.py -v tool -v tool --version Version Match Regex: reNgine needs version match regex to find out if there is any update available or not. You can check how the tool displays the version number and we can generate the regex for you, or you can do that manually as well. If version regex is not given, reNgine will not be able to check the updates automatically. However, you can still force update the tools. See, how the tool names the release version. https://github.com/user/tool/releases For version numbers like v1.2/V1.2/1.2 use regex [vV]*(d+.)?(d+.) For version numbers like v1.2.3/V1.2.3/1.2.3 use regex [vV]*(d+.)?(d+.)?(*|d+) For version numbers like v1.2.3.4/V1.2.3.4/1.2.3.4 use regex [vV]*(d+.)?(d+.)?(*|d+)?(*|d+) Subdomain Gathering Command: reNgine needs to know how this tool accepts target and output the subdomain results. Use the below syntax wherever required. {PATH}, Use this if your tool is github cloned. Example. python3 {PATH}/subdomain.py {TARGET}, Use this for the command-line arg that takes in domain as input target. Example. subfinder -d {TARGET} {OUTPUT}, Use this for the command-line arg that takes the output arg. Example. subfinder -d {TARGET} -o {OUTPUT} {PROXY}, Use this if your tool supports proxy. Example. tool_name -p {PROXY} You can use the combinations of the above syntax and also you can use any other command-line argument that your tool supports. To use this tool, simply use this toolname on Scan Engine uses_tools section.","title":"Add tool Fields"},{"location":"usage/hackerone/","text":"Automatic Vulnerability Reporting to Hackerone \u00b6 reNgine automatically sends vulnerability report to the Hackerone program which the target belongs to, if it finds Critical or High vulnerability. In order for reNgine to achieve this, it needs 3 things. Your HackerOne Username Hackerone API Token And Target team_handle How to generate hackerone api token? \u00b6 To generate hackerone api token, visit the official documentation/instructions from Hackerone. https://docs.hackerone.com/hackers/api-token.html Once you have generated your hackerone api token, you can add them to Hackerone Setting, under Settings menu from top navigation bar. What is team_handle? \u00b6 Team handle is a unique identifier for your target generated by hackerone. Suppose if your target belongs to a vulnerability program called 'Stripe', the target team_handle will be the 'stripe' generated from https://hackerone.com/stripe. You need to add the team_handle to your target when you add, you can also update the target later. How to add team_handle to your target? Danger team_handle must be provided to the targets for reNgine to automatically report vulnerability. Testing yout hackerone api token \u00b6 You can also test hackerone api token to see if it works correctly. Once you have generated api token, you can verify by clicking on the button \"Test my hackerone api key\". Choosing the vulnerability severity to report \u00b6 By default, reNgine will report only Critical and High severity Vulnerabilities. You can choose to select what severity to report among Critical, High and Medium Severities. Vulnerability Report Template \u00b6 You can customize the vulnerability report template using markdown. Replace the below syntax wherever you require. Curly braces are must! {vulnerability_name} Vulnerability Title/Name. {vulnerable_url} Vulnerable URL. {vulnerability_severity} Vulnerability Severity. {vulnerability_description} Description of vulnerability generated by Nuclei. {vulnerability_extracted_results} Vulnerabty Results extracted by Nuclei. {vulnerability_reference} Additional Reference to vulnerability.","title":"Automatic Vulnerability Reporting to Hackerone"},{"location":"usage/hackerone/#automatic-vulnerability-reporting-to-hackerone","text":"reNgine automatically sends vulnerability report to the Hackerone program which the target belongs to, if it finds Critical or High vulnerability. In order for reNgine to achieve this, it needs 3 things. Your HackerOne Username Hackerone API Token And Target team_handle","title":"Automatic Vulnerability Reporting to Hackerone"},{"location":"usage/hackerone/#how-to-generate-hackerone-api-token","text":"To generate hackerone api token, visit the official documentation/instructions from Hackerone. https://docs.hackerone.com/hackers/api-token.html Once you have generated your hackerone api token, you can add them to Hackerone Setting, under Settings menu from top navigation bar.","title":"How to generate hackerone api token?"},{"location":"usage/hackerone/#what-is-team_handle","text":"Team handle is a unique identifier for your target generated by hackerone. Suppose if your target belongs to a vulnerability program called 'Stripe', the target team_handle will be the 'stripe' generated from https://hackerone.com/stripe. You need to add the team_handle to your target when you add, you can also update the target later. How to add team_handle to your target? Danger team_handle must be provided to the targets for reNgine to automatically report vulnerability.","title":"What is team_handle?"},{"location":"usage/hackerone/#testing-yout-hackerone-api-token","text":"You can also test hackerone api token to see if it works correctly. Once you have generated api token, you can verify by clicking on the button \"Test my hackerone api key\".","title":"Testing yout hackerone api token"},{"location":"usage/hackerone/#choosing-the-vulnerability-severity-to-report","text":"By default, reNgine will report only Critical and High severity Vulnerabilities. You can choose to select what severity to report among Critical, High and Medium Severities.","title":"Choosing the vulnerability severity to report"},{"location":"usage/hackerone/#vulnerability-report-template","text":"You can customize the vulnerability report template using markdown. Replace the below syntax wherever you require. Curly braces are must! {vulnerability_name} Vulnerability Title/Name. {vulnerable_url} Vulnerable URL. {vulnerability_severity} Vulnerability Severity. {vulnerability_description} Description of vulnerability generated by Nuclei. {vulnerability_extracted_results} Vulnerabty Results extracted by Nuclei. {vulnerability_reference} Additional Reference to vulnerability.","title":"Vulnerability Report Template"},{"location":"usage/interesting/","text":"Interesting Subdomains \u00b6 reNgine can identify interesting subdomains based on certain keywords. While some of the keywords come by default, you also have an option to enter custom keywords, that are likely to be your interest. Adding keywords \u00b6 On the top navigation menu, click on Engine and then click on Interesting Lookup. You can now add interesting keywords on custom keywords section. Please separate keywords using comma Example phpmyadmin, ssh, another keyword If any of these keywords are matched, reNgine will classify them as interesting subdomains. You can also choose where to lookup, Subdomain Name or Page Title or both. You can also choose to lookup only if subdomain HTTP status is 200, OK.","title":"Interesting Subdomains"},{"location":"usage/interesting/#interesting-subdomains","text":"reNgine can identify interesting subdomains based on certain keywords. While some of the keywords come by default, you also have an option to enter custom keywords, that are likely to be your interest.","title":"Interesting Subdomains"},{"location":"usage/interesting/#adding-keywords","text":"On the top navigation menu, click on Engine and then click on Interesting Lookup. You can now add interesting keywords on custom keywords section. Please separate keywords using comma Example phpmyadmin, ssh, another keyword If any of these keywords are matched, reNgine will classify them as interesting subdomains. You can also choose where to lookup, Subdomain Name or Page Title or both. You can also choose to lookup only if subdomain HTTP status is 200, OK.","title":"Adding keywords"},{"location":"usage/notification/","text":"Notification Settings \u00b6 reNgine now supports Slack, Discord and Telegram as notification channels. You can now choose what kind of notification to be sent to the notification channel. Notifications settings can be found inside Notification Settings section under Settings menu in top navigation bar. Learn how to create Slack Web Hook Learn how to create Discord Web Hook Learn how to create Telegram Bot You can also send list of all subdomains to discord by setting the the checkbox 'Upload Scan results' to true.","title":"Notification Settings"},{"location":"usage/notification/#notification-settings","text":"reNgine now supports Slack, Discord and Telegram as notification channels. You can now choose what kind of notification to be sent to the notification channel. Notifications settings can be found inside Notification Settings section under Settings menu in top navigation bar. Learn how to create Slack Web Hook Learn how to create Discord Web Hook Learn how to create Telegram Bot You can also send list of all subdomains to discord by setting the the checkbox 'Upload Scan results' to true.","title":"Notification Settings"},{"location":"usage/organization/","text":"Organization tagging on reNgine \u00b6 reNgine supports tagging multiple targets to an organization. This allows you to initiate the scan for all targets at once, filter the scan results etc. Adding Organization \u00b6 To add the Organization, navigate to the top navigation menu and click on Organization and then click on Add Organization button. Name your organization, description is an optional parameter. Choose as many targets as you need to add to the organization. Initiating Scan on Organization \u00b6 You can also initiate the scan on organization. This means, the scan will be performed on all targets tagged to the organization. Scheduling Scan for an Organization \u00b6 You can also schedule the scan on organization by clicking on the Schedule Scan button from Action column. Filtering Targets and Scan based on Organization \u00b6 On both Scan History and Targets pages, you will find a Filter button on top left corner of the page. You can filter scans or targets based on organization.","title":"Organization tagging on reNgine"},{"location":"usage/organization/#organization-tagging-on-rengine","text":"reNgine supports tagging multiple targets to an organization. This allows you to initiate the scan for all targets at once, filter the scan results etc.","title":"Organization tagging on reNgine"},{"location":"usage/organization/#adding-organization","text":"To add the Organization, navigate to the top navigation menu and click on Organization and then click on Add Organization button. Name your organization, description is an optional parameter. Choose as many targets as you need to add to the organization.","title":"Adding Organization"},{"location":"usage/organization/#initiating-scan-on-organization","text":"You can also initiate the scan on organization. This means, the scan will be performed on all targets tagged to the organization.","title":"Initiating Scan on Organization"},{"location":"usage/organization/#scheduling-scan-for-an-organization","text":"You can also schedule the scan on organization by clicking on the Schedule Scan button from Action column.","title":"Scheduling Scan for an Organization"},{"location":"usage/organization/#filtering-targets-and-scan-based-on-organization","text":"On both Scan History and Targets pages, you will find a Filter button on top left corner of the page. You can filter scans or targets based on organization.","title":"Filtering Targets and Scan based on Organization"},{"location":"usage/projects/","text":"reNgine 2.0 introduces a powerful addition that enables you to efficiently organize your web application reconnaissance efforts. With this feature, you can create distinct project spaces, each tailored to a specific purpose, such as personal bug bounty hunting, client engagements, or any other specialized recon task. Each projects will have separate dashboard, separate targets and all the scan results will be separated from each projects, while scan engines and configuration will be shared across all the projects. It's like having multiple instances of reNgine running. No scan data will be shared across projects. What is shared across projects? \u00b6 Scan Engines Tools and configurations Interesting Keywords Wordlist What is not shared across projects? \u00b6 Targets Any scan related data such as Subdomains, Endpoints, Vulnerabilities etc Dashboard and Insights Adding Projects \u00b6 You will be prompted with an onboarding page once reNgine is installed. Atleast one project is required to run reNgine. Later, if you wish to add new projects, you can click on 'Create New Project' from top menu Switching Between the Projects \u00b6 If there are multiple projects and you wish to switch between them, lick on Projects menu, and click on the project name. You will be welcomed with the project's separate dashboard.","title":"Projects"},{"location":"usage/projects/#what-is-shared-across-projects","text":"Scan Engines Tools and configurations Interesting Keywords Wordlist","title":"What is shared across projects?"},{"location":"usage/projects/#what-is-not-shared-across-projects","text":"Targets Any scan related data such as Subdomains, Endpoints, Vulnerabilities etc Dashboard and Insights","title":"What is not shared across projects?"},{"location":"usage/projects/#adding-projects","text":"You will be prompted with an onboarding page once reNgine is installed. Atleast one project is required to run reNgine. Later, if you wish to add new projects, you can click on 'Create New Project' from top menu","title":"Adding Projects"},{"location":"usage/projects/#switching-between-the-projects","text":"If there are multiple projects and you wish to switch between them, lick on Projects menu, and click on the project name. You will be welcomed with the project's separate dashboard.","title":"Switching Between the Projects"},{"location":"usage/proxy/","text":"Proxy Settings \u00b6 Proxies are integral part of web scraping. Every website has a limit to certain number of requests for a certain period of time from an particular IP Address that it will allow, exceeding the limit will block any incoming requests from such IP Address for a specific period of time. This results in unreiliable recon results. Suppose if you were to run Nuclei on a particular target with all the templates, your IP is likely to get banned. And this is especially true for dorking and other OSINT reNgine does. After certain dorking attempts Google is likely to ban your IP for certain period of time. If you are looking for highly accurate recon results, it is recommended that you use rotating proxies or proxy pool. reNgine allows you to add as many proxies as possible, while during the scan, reNgine will pick one proxy randomly. There is no order to which a proxy will be selected. Purchasing Proxies \u00b6 If you are looking to purchase Proxies, please use this referral link to purchase. Or you can also use coupon rengine here on PrivateProxy , using coupon rengine , you'll get additional 25% off. Adding Proxies \u00b6 To add proxies, click 'Settings' on top navigation menu, and then click on 'Proxies' Click on 'Use Proxy' checkbox and the textarea should be visible. Enter as many proxies as possible and click on 'Save Proxies' button. You are now good to go. Danger Please make sure your proxies are working, otherwise reNgine will not be able to perform scan.","title":"Proxy Settings"},{"location":"usage/proxy/#proxy-settings","text":"Proxies are integral part of web scraping. Every website has a limit to certain number of requests for a certain period of time from an particular IP Address that it will allow, exceeding the limit will block any incoming requests from such IP Address for a specific period of time. This results in unreiliable recon results. Suppose if you were to run Nuclei on a particular target with all the templates, your IP is likely to get banned. And this is especially true for dorking and other OSINT reNgine does. After certain dorking attempts Google is likely to ban your IP for certain period of time. If you are looking for highly accurate recon results, it is recommended that you use rotating proxies or proxy pool. reNgine allows you to add as many proxies as possible, while during the scan, reNgine will pick one proxy randomly. There is no order to which a proxy will be selected.","title":"Proxy Settings"},{"location":"usage/proxy/#purchasing-proxies","text":"If you are looking to purchase Proxies, please use this referral link to purchase. Or you can also use coupon rengine here on PrivateProxy , using coupon rengine , you'll get additional 25% off.","title":"Purchasing Proxies"},{"location":"usage/proxy/#adding-proxies","text":"To add proxies, click 'Settings' on top navigation menu, and then click on 'Proxies' Click on 'Use Proxy' checkbox and the textarea should be visible. Enter as many proxies as possible and click on 'Save Proxies' button. You are now good to go. Danger Please make sure your proxies are working, otherwise reNgine will not be able to perform scan.","title":"Adding Proxies"},{"location":"usage/report/","text":"reNgine supports downloading PDF reports. You can either download Full Scan Report or Reconnaissance Report or Vulnerability Report . You can also customize the vulnerability report from Settings > Report Settings. To Download the report click on Scan History and on Action Button Click Download Report Select the type of report and click on Download Report","title":"Report"},{"location":"usage/roles_perms/","text":"Multiple Users, Roles and Permissions \u00b6 Roles and Permissions! Begining reNgine 2.0, we've taken your web application reconnaissance to a whole new level of control and security. Now, you can assign distinct roles to your team members\u2014Sys Admin, Penetration Tester, and Auditor\u2014each with precisely defined permissions to tailor their access and actions within the reNgine ecosystem. Adding Multiple Users \u00b6 You can add multiple users from Admin Settings menu. Attention Please note that, the admin settings menu is only accesible to Sys Admin or root user! Click on + Add User You can assign below mentioned roles. Available Roles \u00b6 Sys Admin: Sys Admin is a super user that has permission to modify system and scan related configurations, scan engines, create new users, add new tools etc. Super user can initiate scans and subscans effortlessly. Penetration Tester: Penetration Tester will be allowed to modify and initiate scans and subscans, add or update targets, etc. A penetration tester will not be allowed to modify system configurations. A penetration tester will also not be able to add or modify users. Auditor: Auditor can only view and download the report. An auditor can not change any system or scan related configurations nor can initiate any scans or subscans. Disable Users \u00b6 You can also disable users from Admin Settings page. On every user accounts, you will see an action button called Disable User , clicking on it will disable the user. A disabled user will not be able to access reNgine. Changing Password \u00b6 A Sys Admin can only change the password for other users. It is possible to change the password from the actions menu on each user. Changing Roles \u00b6 A Sys Admin can also upgrade or downgrade the roles for any users from the same actions menu.","title":"Multiple Users, Roles and Permissions"},{"location":"usage/roles_perms/#multiple-users-roles-and-permissions","text":"Roles and Permissions! Begining reNgine 2.0, we've taken your web application reconnaissance to a whole new level of control and security. Now, you can assign distinct roles to your team members\u2014Sys Admin, Penetration Tester, and Auditor\u2014each with precisely defined permissions to tailor their access and actions within the reNgine ecosystem.","title":"Multiple Users, Roles and Permissions"},{"location":"usage/roles_perms/#adding-multiple-users","text":"You can add multiple users from Admin Settings menu. Attention Please note that, the admin settings menu is only accesible to Sys Admin or root user! Click on + Add User You can assign below mentioned roles.","title":"Adding Multiple Users"},{"location":"usage/roles_perms/#available-roles","text":"Sys Admin: Sys Admin is a super user that has permission to modify system and scan related configurations, scan engines, create new users, add new tools etc. Super user can initiate scans and subscans effortlessly. Penetration Tester: Penetration Tester will be allowed to modify and initiate scans and subscans, add or update targets, etc. A penetration tester will not be allowed to modify system configurations. A penetration tester will also not be able to add or modify users. Auditor: Auditor can only view and download the report. An auditor can not change any system or scan related configurations nor can initiate any scans or subscans.","title":"Available Roles"},{"location":"usage/roles_perms/#disable-users","text":"You can also disable users from Admin Settings page. On every user accounts, you will see an action button called Disable User , clicking on it will disable the user. A disabled user will not be able to access reNgine.","title":"Disable Users"},{"location":"usage/roles_perms/#changing-password","text":"A Sys Admin can only change the password for other users. It is possible to change the password from the actions menu on each user.","title":"Changing Password"},{"location":"usage/roles_perms/#changing-roles","text":"A Sys Admin can also upgrade or downgrade the roles for any users from the same actions menu.","title":"Changing Roles"},{"location":"usage/scan_engine/","text":"YAML Configuration for Scan Engine \u00b6 How to write your reNgine Scan Engine YAML Configuration? \u00b6 reNgine provides the ability to customize scan engines via YAML based configuration. This configuration can be used to select the tools, choose the options provided by the tools etc. Attention reNgine 2.0 has new scan engine configuration. Configurations from reNgine < 2.0.0 will not work in >= 2.0.0 Attention reNgine 2.0 does not provide switches to enable or disable tasks. The YAML configuration decides which tasks to use. Any task: {} that is in YAML config will run, rest will not. Currently YAML config is supported for YAML Support for Subdomain Discovery as subdomain_discovery HTTP Crawling as http_crawl Screenshot Gathering as screenshot OSINT as osint Port Scan as port_scan Directory and File Fuzzing as dir_file_fuzz Endpoint Gathering as fetch_url Vulnerability Scan as vulnerability_scan Default YAML Config \u00b6 subdomain_discovery : { 'uses_tools' : [ 'subfinder' , 'ctfr' , 'sublist3r' , 'tlsx' , 'oneforall' , 'netlas' ], 'enable_http_crawl' : true , 'threads' : 30 , 'timeout' : 5 , 'use_amass_config' : false , 'use_subfinder_config' : false , } http_crawl : {} port_scan : { 'enable_http_crawl' : true , 'timeout' : 5 , # 'exclude_ports': [], # 'exclude_subdomains': true, 'ports' : [ 'top-100' ], 'rate_limit' : 150 , 'threads' : 30 , 'passive' : false , # 'use_naabu_config': false, # 'enable_nmap': true, # 'nmap_cmd': '', # 'nmap_script': '', # 'nmap_script_args': '' } osint : { 'discover' : [ 'emails' , 'metainfo' , 'employees' ], 'dorks' : [ 'login_pages' , 'admin_panels' , 'dashboard_pages' , 'stackoverflow' , 'social_media' , 'project_management' , 'code_sharing' , 'config_files' , 'jenkins' , 'wordpress_files' , 'php_error' , 'exposed_documents' , 'db_files' , 'git_exposed' ], 'custom_dorks' : [ { 'lookup_site' : 'google.com' , 'lookup_keywords' : '/home/' }, { 'lookup_site' : '_target_' , 'lookup_extensions' : 'jpg,png' } ], 'intensity' : 'normal' , 'documents_limit' : 50 } dir_file_fuzz : { 'auto_calibration' : true , 'enable_http_crawl' : true , 'rate_limit' : 150 , 'extensions' : [ 'html' , 'php' , 'git' , 'yaml' , 'conf' , 'cnf' , 'config' , 'gz' , 'env' , 'log' , 'db' , 'mysql' , 'bak' , 'asp' , 'aspx' , 'txt' , 'conf' , 'sql' , 'json' , 'yml' , 'pdf' ], 'follow_redirect' : false , 'max_time' : 0 , 'match_http_status' : [ 200 , 204 ], 'recursive_level' : 2 , 'stop_on_error' : false , 'timeout' : 5 , 'threads' : 30 , 'wordlist_name' : 'dicc' } fetch_url : { 'uses_tools' : [ 'gospider' , 'hakrawler' , 'waybackurls' , 'gospider' , 'katana' ], 'remove_duplicate_endpoints' : true , 'duplicate_fields' : [ 'content_length' , 'page_title' ], 'enable_http_crawl' : true , 'gf_patterns' : [ 'debug_logic' , 'idor' , 'interestingEXT' , 'interestingparams' , 'interestingsubs' , 'lfi' , 'rce' , 'redirect' , 'sqli' , 'ssrf' , 'ssti' , 'xss' ], 'ignore_file_extensions' : [ 'png' , 'jpg' , 'jpeg' , 'gif' , 'mp4' , 'mpeg' , 'mp3' ] # 'exclude_subdomains': true } vulnerability_scan : { 'run_nuclei' : false , 'run_dalfox' : false , 'run_crlfuzz' : false , 'run_s3scanner' : true , 'enable_http_crawl' : true , 'concurrency' : 50 , 'intensity' : 'normal' , 'rate_limit' : 150 , 'retries' : 1 , 'timeout' : 5 , 'fetch_gpt_report' : true , 'nuclei' : { 'use_conf' : false , 'severities' : [ 'unknown' , 'info' , 'low' , 'medium' , 'high' , 'critical' ], # 'tags': [], # 'templates': [], # 'custom_templates': [], }, 's3scanner' : { 'threads' : 100 , 'providers' : [ 'aws' , 'gcp' , 'digitalocean' , 'dreamhost' , 'linode' ] } } waf_detection : {} screenshot : { 'enable_http_crawl' : true , 'timeout' : 10 , 'threads' : 40 } Info While the above YAML config is good enough to run the scan against the targets, modifying the configurations may give better scan results. Before you make any modifications to the YAML Configuration, please note that, wrong configuration may crash the scans. It is adviced that you learn about YAML before you make any modifications. Detailed guide on configuring Scan Engines \u00b6 This document will discuss about the available options, possibilities and different configurations required for reNgine Scan Engine YAML configuration. subdomain_discovery \u00b6 uses_tools : (list) A list of subdomain discovery tools to use, such as 'subfinder', 'ctfr', 'sublist3r', etc. Available tools for subdomain_discovery are: all (will use all default and custom subdomain enum tools) subfinder ctfr sublist3r tlsx oneforall netlas amass-passive amass-active custom_tool: You can also install custom subdomain enum tool and use it here. You can use one or more combination of these tools to improve the results. threads : (int) The number of threads or concurrent processes to use for subdomain discovery. timeout : (int) The maximum time, in seconds, to wait for subdomain discovery to complete. use_amass_config : (boolean) If set to true, reNgine will use configuration file for amass. Find more about configuration files here. use_subfinder_config : (boolean) If set to true, reNgine will use configuration file for subfinder. Find more about configuration files here. amass_wordlist : (str) Optional, Wordlist for amass-active which performs brute-force of subdomains using a the wordlists. Available Options for amass_wordlist are: default short_name_for_wordlist Please follow the guide on uploading your own wordlist . You need to enter the wordlist short_name here. Default Wordlist If default wordlist is choosed then Deepmagic top 50,000 prefix wordlist will be used. reNgine currently does not support multiple wordlists. This feature maybe available in future updates. Using Custom Subdomain Enum Tool \u00b6 TIP on using custom tools! reNgine supports custom tools. Instruction on installing custom tool can be found here . You can use the name of the tool that was entered earlier. If your subdomain gathering tool was names as Turbo, you can use as uses_tools: ['subfinder', 'turbo'] http_crawl \u00b6 This option can be used to do http probing. Not using http_crawl will be a passive scan. port_scan \u00b6 Port scan is currently being performed using naabu , please refer naabu documentation as well. enable_http_crawl : (boolean) A boolean indicating whether to enable HTTP crawling after port scanning. timeout : (int) The maximum time, in seconds, to wait for port scanning to complete. ports : (list) A list of ports to scan, such as 'top-100'. Available options are: top-100 top-1000 full (will scan all 65k ports) list of port numbers like [80, 443, 8080] rate_limit : (int) The rate limit for port scanning. threads : (int) The number of threads or concurrent processes to use for port scanning. passive : (boolean) A boolean indicating whether to use passive naabu port scan. exclude_ports : (list) Ports which you would like to exclude from the scan for example: [8081, 443] exclude_subdomains : (boolean) If set to true, port scanning will not be done on subdomains that are chosen to be ignored while starting scan. use_naabu_config : (boolean) If set to true, reNgine will use configuration file for naabu. Find more about configuration files here. enable_nmap : (boolean) If set to true, nmap will be used for scanning vulnerabilities on discovered ports. nmap_cmd : (str) Custom Nmap Command nmap_script : (str) Nmap Script to use: this will be passed in to nmap's --script option. nmap_script_args : (str) Nmap Script Args to use: this will be passed in to nmap's --script-args option. osint \u00b6 Currently supported options for osint are: discover (list) : A list of items to discover, for example ['emails', 'metainfo'] , available options are: emails metainfo employees intensity (int) : The intensity of the OSINT scan, e.g., normal or deep . documents_limit (int) : The maximum number of documents to retrieve. dorks (list) : A list of dork types to search for. Available options are: login_pages admin_panels dashboard_pages stackoverflow social_media project_management code_sharing config_files jenkins wordpress_files php_error exposed_documents db_files git_exposed custom_dorks (list) : Custom dorks will be a list of dictionaries, for example: [{'lookup_site': 'google.com', 'lookup_keywords': '/home/'}] [{'lookup_site': '__target__', 'lookup_extensions': 'db, php, jpg'}] lookup_site is where the information should be looked for. Example stackoverflow.com, or even the target, so the possible values for lookup_site could be any website or the target itself. Suppose, if you want to look for all db files in the target itself, lookup_site will be __target__ . reNgine will automatically replace this with actual target. Do not put the target name here, rather __target__ . lookup_keywords or lookup_extensions lookup_keywords or lookup_extensions can not be used together, you can either search for specific path file in google or certain files that are indexed, so they can not be used together. You will need to use either lookup_keywords or lookup_extensions . lookup_keywords could be certain keywords, paths, separated by comma. lookup_extensions could be file extensions separated by comma. dir_file_fuzz \u00b6 This configuration will be used in Directory and file fuzzing. Currently supported options for dir_file_fuzz are: auto_calibration : (boolean) Automatically calibrate filtering options (ffuf specific) enable_http_crawl : (boolean) If set to true, only alive URLs will be used for dir_file_fuzz gathering. rate_limit : (int) The rate limit for fuzzing. extensions : (list) This option will allow you to define the extensions for the file fuzzing. You can define as many file extensions as you wish. Please note that, more file extensions will take longer to complete fuzzing. For example: ['php', 'git', 'xml'] follow_redirect : (boolean) Follow redirects (ffuf specific) max_time : (int) If you don't want ffuf to run indefinitely, you can use the max_time. This stops the entire process after a given time (in seconds). match_http_status : (list) List of HTTP status codes to consider as a match. recursive_level : (int) Enabling recursive_level option will bruteforce recursively inside all the directories. Turning on this option will increase scan time exponentially but will gather more information. Use it wisely. stop_on_error : (boolean) Stop on spurious errors (ffuf specific) timeout : (int) The maximum time, in seconds, to wait for fuzzing to complete. threads : (int) The number of threads or concurrent processes to use for fuzzing. match_http_status : (list) Match HTTP status codes, or \"all\" for everything. For example: [200, 204] wordlist_name : (str) This option is used to supply wordlist for files and directory fuzzing. Available Options for wordlist_name are: default short_name_for_wordlist Please follow the guide on uploading your own wordlist . You need to enter the wordlist short_name here. Default Wordlist If default wordlist is choosed then default dicc.txt will be used. reNgine currently does not support multiple wordlists. This feature maybe available in future updates. fetch_url \u00b6 fetch_url uses tools like gau and hakrawler to gather the endpoints. Currently supported options for fetch_url are: uses_tools : (list) A list of tools to use for URL fetching. Available tools are: gospider hakrawler waybackurls gospider katana It can be used as 'uses_tools': ['gospider', 'hakrawler', 'waybackurls', 'gospider'] remove_duplicate_endpoints : (boolean) A boolean indicating whether to remove duplicate endpoints. duplicate_fields : (list) Fields used to identify duplicate endpoints. Available options are: content_length page_title http_status content_type webserver Use these available options as combination to identify duplicate endpoints, for example ['content_length', 'page_title'] enable_http_crawl : (boolean) If set to true, only alive URLs will be used for fetch_url gathering. gf_patterns : (list) List of patterns to search for using Gf. Available patterns are: debug_logic idor interestingEXT interestingparams interestingsubs lfi rce redirect sqli ssrf ssti xss Use the combination of GF patterns as: ['xss', 'lfi', 'rce'] Custom GF Pattern You can also upload custom gf patterns, and use filename here, without extension. ignore_file_extensions : (list) This option will allow you to ignore certain file extensions while gathering URLs. You can use one or more combination of extensions to exclude. For example ['png', 'jpg', 'jpeg', 'gif', 'mp4', 'mpeg', 'mp3'] exclude_subdomains : (boolean) If set to true, URLs will not be fetched for subdomains that are chosen to be ignored while initiating scan. vulnerability_scan \u00b6 run_nuclei : (boolean) If set to true, nuclei will be used for vulnerability scan. run_dalfox : (boolean) If set to true, dalfox will be used for XSS scans. run_crlfuzz : (boolean) If set to true, CRLFuzz will be used for CRLF vulnerability detection. run_s3scanner : (boolean) If set to true, misconfigured s3 buckets will be used during vulnerability scan. concurrency : (int) This option will specify the number of threads/go routines to perform vulnerability scan. rate_limit : (int) Maximum number of requests to send per second retries : (int) Number of times to retry a failed request timeout : (int) Time to wait in seconds before timeout fetch_gpt_report : (boolean) If set to true, GPT will be used to fetch vulnerability details such as impact and remediation. OpenAiAPIKey is required. nuclei : Nuclei specific configurations use_conf : (boolean) If set to true, reNgine will use configuration file for nuclei. Find more about configuration files here. severities : (list) You can run the templates based on the specific severity of the template, single or multiple severity can be used for scan. Available options are: all critical high medium low info unknown tags : (list) List of nuclei tags, refer to Nuclei's documentation. templates : (list) Please refer to nuclei's documentation to check which templates are supported. Nuclei may release any new templates which may not be possible to update here in the documentation, so it is adviced that you refer to Nuclei's documentation . For example ['files', 'cve'] custom_templates : (list) !!! tip \"Custom Nuclei Templates\" You can also upload custom Nuclei Templates from Tool Settings, and use filename here, without extension. s3scanner : s3scanner specific configurations threads : (int) s3scanner number of threads providers : (list) List of providers to look for misconfigured s3 buckets. Availble options are: aws gcp digitalocean dreamhost linode For example: ['aws', 'gcp'] waf_detection \u00b6 Use this to detect the WAF in subdomains, wafw00f will be used to identify WAF. screenshot \u00b6 Screenshot gathering enable_http_crawl : (boolean) If set to true, only alive URLs will be used for screenshot gathering. timeout : (int) Timeout in seconds for screenshot gathering threads : (int) Numbers of threads to use for EyeWitness Shared Scan Configuration \u00b6 Some of the scan configurations such as threads or custom_header could be used across all the tasks. Instead of using them in individual task, you can also use them as shared configuration, outside the task object configuration. enable_http_crawl timeout rate_limit retries custom_header Example: subdomain_discovery : {} http_crawl : {} port_scan : {} osint : {} dir_file_fuzz : {} fetch_url : {} vulnerability_scan : {} waf_detection : {} screenshot : {} # shared scan config enable_http_crawl : true timeout : 10 rate_limit : 5 retries : 2 custom_header : \"Foo: bar\" These shared scan config will be used across all the tasks.","title":"Scan Engine Configuration"},{"location":"usage/scan_engine/#yaml-configuration-for-scan-engine","text":"","title":"YAML Configuration for Scan Engine"},{"location":"usage/scan_engine/#how-to-write-your-rengine-scan-engine-yaml-configuration","text":"reNgine provides the ability to customize scan engines via YAML based configuration. This configuration can be used to select the tools, choose the options provided by the tools etc. Attention reNgine 2.0 has new scan engine configuration. Configurations from reNgine < 2.0.0 will not work in >= 2.0.0 Attention reNgine 2.0 does not provide switches to enable or disable tasks. The YAML configuration decides which tasks to use. Any task: {} that is in YAML config will run, rest will not. Currently YAML config is supported for YAML Support for Subdomain Discovery as subdomain_discovery HTTP Crawling as http_crawl Screenshot Gathering as screenshot OSINT as osint Port Scan as port_scan Directory and File Fuzzing as dir_file_fuzz Endpoint Gathering as fetch_url Vulnerability Scan as vulnerability_scan","title":"How to write your reNgine Scan Engine YAML Configuration?"},{"location":"usage/scan_engine/#default-yaml-config","text":"subdomain_discovery : { 'uses_tools' : [ 'subfinder' , 'ctfr' , 'sublist3r' , 'tlsx' , 'oneforall' , 'netlas' ], 'enable_http_crawl' : true , 'threads' : 30 , 'timeout' : 5 , 'use_amass_config' : false , 'use_subfinder_config' : false , } http_crawl : {} port_scan : { 'enable_http_crawl' : true , 'timeout' : 5 , # 'exclude_ports': [], # 'exclude_subdomains': true, 'ports' : [ 'top-100' ], 'rate_limit' : 150 , 'threads' : 30 , 'passive' : false , # 'use_naabu_config': false, # 'enable_nmap': true, # 'nmap_cmd': '', # 'nmap_script': '', # 'nmap_script_args': '' } osint : { 'discover' : [ 'emails' , 'metainfo' , 'employees' ], 'dorks' : [ 'login_pages' , 'admin_panels' , 'dashboard_pages' , 'stackoverflow' , 'social_media' , 'project_management' , 'code_sharing' , 'config_files' , 'jenkins' , 'wordpress_files' , 'php_error' , 'exposed_documents' , 'db_files' , 'git_exposed' ], 'custom_dorks' : [ { 'lookup_site' : 'google.com' , 'lookup_keywords' : '/home/' }, { 'lookup_site' : '_target_' , 'lookup_extensions' : 'jpg,png' } ], 'intensity' : 'normal' , 'documents_limit' : 50 } dir_file_fuzz : { 'auto_calibration' : true , 'enable_http_crawl' : true , 'rate_limit' : 150 , 'extensions' : [ 'html' , 'php' , 'git' , 'yaml' , 'conf' , 'cnf' , 'config' , 'gz' , 'env' , 'log' , 'db' , 'mysql' , 'bak' , 'asp' , 'aspx' , 'txt' , 'conf' , 'sql' , 'json' , 'yml' , 'pdf' ], 'follow_redirect' : false , 'max_time' : 0 , 'match_http_status' : [ 200 , 204 ], 'recursive_level' : 2 , 'stop_on_error' : false , 'timeout' : 5 , 'threads' : 30 , 'wordlist_name' : 'dicc' } fetch_url : { 'uses_tools' : [ 'gospider' , 'hakrawler' , 'waybackurls' , 'gospider' , 'katana' ], 'remove_duplicate_endpoints' : true , 'duplicate_fields' : [ 'content_length' , 'page_title' ], 'enable_http_crawl' : true , 'gf_patterns' : [ 'debug_logic' , 'idor' , 'interestingEXT' , 'interestingparams' , 'interestingsubs' , 'lfi' , 'rce' , 'redirect' , 'sqli' , 'ssrf' , 'ssti' , 'xss' ], 'ignore_file_extensions' : [ 'png' , 'jpg' , 'jpeg' , 'gif' , 'mp4' , 'mpeg' , 'mp3' ] # 'exclude_subdomains': true } vulnerability_scan : { 'run_nuclei' : false , 'run_dalfox' : false , 'run_crlfuzz' : false , 'run_s3scanner' : true , 'enable_http_crawl' : true , 'concurrency' : 50 , 'intensity' : 'normal' , 'rate_limit' : 150 , 'retries' : 1 , 'timeout' : 5 , 'fetch_gpt_report' : true , 'nuclei' : { 'use_conf' : false , 'severities' : [ 'unknown' , 'info' , 'low' , 'medium' , 'high' , 'critical' ], # 'tags': [], # 'templates': [], # 'custom_templates': [], }, 's3scanner' : { 'threads' : 100 , 'providers' : [ 'aws' , 'gcp' , 'digitalocean' , 'dreamhost' , 'linode' ] } } waf_detection : {} screenshot : { 'enable_http_crawl' : true , 'timeout' : 10 , 'threads' : 40 } Info While the above YAML config is good enough to run the scan against the targets, modifying the configurations may give better scan results. Before you make any modifications to the YAML Configuration, please note that, wrong configuration may crash the scans. It is adviced that you learn about YAML before you make any modifications.","title":"Default YAML Config"},{"location":"usage/scan_engine/#detailed-guide-on-configuring-scan-engines","text":"This document will discuss about the available options, possibilities and different configurations required for reNgine Scan Engine YAML configuration.","title":"Detailed guide on configuring Scan Engines"},{"location":"usage/scan_engine/#subdomain_discovery","text":"uses_tools : (list) A list of subdomain discovery tools to use, such as 'subfinder', 'ctfr', 'sublist3r', etc. Available tools for subdomain_discovery are: all (will use all default and custom subdomain enum tools) subfinder ctfr sublist3r tlsx oneforall netlas amass-passive amass-active custom_tool: You can also install custom subdomain enum tool and use it here. You can use one or more combination of these tools to improve the results. threads : (int) The number of threads or concurrent processes to use for subdomain discovery. timeout : (int) The maximum time, in seconds, to wait for subdomain discovery to complete. use_amass_config : (boolean) If set to true, reNgine will use configuration file for amass. Find more about configuration files here. use_subfinder_config : (boolean) If set to true, reNgine will use configuration file for subfinder. Find more about configuration files here. amass_wordlist : (str) Optional, Wordlist for amass-active which performs brute-force of subdomains using a the wordlists. Available Options for amass_wordlist are: default short_name_for_wordlist Please follow the guide on uploading your own wordlist . You need to enter the wordlist short_name here. Default Wordlist If default wordlist is choosed then Deepmagic top 50,000 prefix wordlist will be used. reNgine currently does not support multiple wordlists. This feature maybe available in future updates.","title":"subdomain_discovery"},{"location":"usage/scan_engine/#using-custom-subdomain-enum-tool","text":"TIP on using custom tools! reNgine supports custom tools. Instruction on installing custom tool can be found here . You can use the name of the tool that was entered earlier. If your subdomain gathering tool was names as Turbo, you can use as uses_tools: ['subfinder', 'turbo']","title":"Using Custom Subdomain Enum Tool"},{"location":"usage/scan_engine/#http_crawl","text":"This option can be used to do http probing. Not using http_crawl will be a passive scan.","title":"http_crawl"},{"location":"usage/scan_engine/#port_scan","text":"Port scan is currently being performed using naabu , please refer naabu documentation as well. enable_http_crawl : (boolean) A boolean indicating whether to enable HTTP crawling after port scanning. timeout : (int) The maximum time, in seconds, to wait for port scanning to complete. ports : (list) A list of ports to scan, such as 'top-100'. Available options are: top-100 top-1000 full (will scan all 65k ports) list of port numbers like [80, 443, 8080] rate_limit : (int) The rate limit for port scanning. threads : (int) The number of threads or concurrent processes to use for port scanning. passive : (boolean) A boolean indicating whether to use passive naabu port scan. exclude_ports : (list) Ports which you would like to exclude from the scan for example: [8081, 443] exclude_subdomains : (boolean) If set to true, port scanning will not be done on subdomains that are chosen to be ignored while starting scan. use_naabu_config : (boolean) If set to true, reNgine will use configuration file for naabu. Find more about configuration files here. enable_nmap : (boolean) If set to true, nmap will be used for scanning vulnerabilities on discovered ports. nmap_cmd : (str) Custom Nmap Command nmap_script : (str) Nmap Script to use: this will be passed in to nmap's --script option. nmap_script_args : (str) Nmap Script Args to use: this will be passed in to nmap's --script-args option.","title":"port_scan"},{"location":"usage/scan_engine/#osint","text":"Currently supported options for osint are: discover (list) : A list of items to discover, for example ['emails', 'metainfo'] , available options are: emails metainfo employees intensity (int) : The intensity of the OSINT scan, e.g., normal or deep . documents_limit (int) : The maximum number of documents to retrieve. dorks (list) : A list of dork types to search for. Available options are: login_pages admin_panels dashboard_pages stackoverflow social_media project_management code_sharing config_files jenkins wordpress_files php_error exposed_documents db_files git_exposed custom_dorks (list) : Custom dorks will be a list of dictionaries, for example: [{'lookup_site': 'google.com', 'lookup_keywords': '/home/'}] [{'lookup_site': '__target__', 'lookup_extensions': 'db, php, jpg'}] lookup_site is where the information should be looked for. Example stackoverflow.com, or even the target, so the possible values for lookup_site could be any website or the target itself. Suppose, if you want to look for all db files in the target itself, lookup_site will be __target__ . reNgine will automatically replace this with actual target. Do not put the target name here, rather __target__ . lookup_keywords or lookup_extensions lookup_keywords or lookup_extensions can not be used together, you can either search for specific path file in google or certain files that are indexed, so they can not be used together. You will need to use either lookup_keywords or lookup_extensions . lookup_keywords could be certain keywords, paths, separated by comma. lookup_extensions could be file extensions separated by comma.","title":"osint"},{"location":"usage/scan_engine/#dir_file_fuzz","text":"This configuration will be used in Directory and file fuzzing. Currently supported options for dir_file_fuzz are: auto_calibration : (boolean) Automatically calibrate filtering options (ffuf specific) enable_http_crawl : (boolean) If set to true, only alive URLs will be used for dir_file_fuzz gathering. rate_limit : (int) The rate limit for fuzzing. extensions : (list) This option will allow you to define the extensions for the file fuzzing. You can define as many file extensions as you wish. Please note that, more file extensions will take longer to complete fuzzing. For example: ['php', 'git', 'xml'] follow_redirect : (boolean) Follow redirects (ffuf specific) max_time : (int) If you don't want ffuf to run indefinitely, you can use the max_time. This stops the entire process after a given time (in seconds). match_http_status : (list) List of HTTP status codes to consider as a match. recursive_level : (int) Enabling recursive_level option will bruteforce recursively inside all the directories. Turning on this option will increase scan time exponentially but will gather more information. Use it wisely. stop_on_error : (boolean) Stop on spurious errors (ffuf specific) timeout : (int) The maximum time, in seconds, to wait for fuzzing to complete. threads : (int) The number of threads or concurrent processes to use for fuzzing. match_http_status : (list) Match HTTP status codes, or \"all\" for everything. For example: [200, 204] wordlist_name : (str) This option is used to supply wordlist for files and directory fuzzing. Available Options for wordlist_name are: default short_name_for_wordlist Please follow the guide on uploading your own wordlist . You need to enter the wordlist short_name here. Default Wordlist If default wordlist is choosed then default dicc.txt will be used. reNgine currently does not support multiple wordlists. This feature maybe available in future updates.","title":"dir_file_fuzz"},{"location":"usage/scan_engine/#fetch_url","text":"fetch_url uses tools like gau and hakrawler to gather the endpoints. Currently supported options for fetch_url are: uses_tools : (list) A list of tools to use for URL fetching. Available tools are: gospider hakrawler waybackurls gospider katana It can be used as 'uses_tools': ['gospider', 'hakrawler', 'waybackurls', 'gospider'] remove_duplicate_endpoints : (boolean) A boolean indicating whether to remove duplicate endpoints. duplicate_fields : (list) Fields used to identify duplicate endpoints. Available options are: content_length page_title http_status content_type webserver Use these available options as combination to identify duplicate endpoints, for example ['content_length', 'page_title'] enable_http_crawl : (boolean) If set to true, only alive URLs will be used for fetch_url gathering. gf_patterns : (list) List of patterns to search for using Gf. Available patterns are: debug_logic idor interestingEXT interestingparams interestingsubs lfi rce redirect sqli ssrf ssti xss Use the combination of GF patterns as: ['xss', 'lfi', 'rce'] Custom GF Pattern You can also upload custom gf patterns, and use filename here, without extension. ignore_file_extensions : (list) This option will allow you to ignore certain file extensions while gathering URLs. You can use one or more combination of extensions to exclude. For example ['png', 'jpg', 'jpeg', 'gif', 'mp4', 'mpeg', 'mp3'] exclude_subdomains : (boolean) If set to true, URLs will not be fetched for subdomains that are chosen to be ignored while initiating scan.","title":"fetch_url"},{"location":"usage/scan_engine/#vulnerability_scan","text":"run_nuclei : (boolean) If set to true, nuclei will be used for vulnerability scan. run_dalfox : (boolean) If set to true, dalfox will be used for XSS scans. run_crlfuzz : (boolean) If set to true, CRLFuzz will be used for CRLF vulnerability detection. run_s3scanner : (boolean) If set to true, misconfigured s3 buckets will be used during vulnerability scan. concurrency : (int) This option will specify the number of threads/go routines to perform vulnerability scan. rate_limit : (int) Maximum number of requests to send per second retries : (int) Number of times to retry a failed request timeout : (int) Time to wait in seconds before timeout fetch_gpt_report : (boolean) If set to true, GPT will be used to fetch vulnerability details such as impact and remediation. OpenAiAPIKey is required. nuclei : Nuclei specific configurations use_conf : (boolean) If set to true, reNgine will use configuration file for nuclei. Find more about configuration files here. severities : (list) You can run the templates based on the specific severity of the template, single or multiple severity can be used for scan. Available options are: all critical high medium low info unknown tags : (list) List of nuclei tags, refer to Nuclei's documentation. templates : (list) Please refer to nuclei's documentation to check which templates are supported. Nuclei may release any new templates which may not be possible to update here in the documentation, so it is adviced that you refer to Nuclei's documentation . For example ['files', 'cve'] custom_templates : (list) !!! tip \"Custom Nuclei Templates\" You can also upload custom Nuclei Templates from Tool Settings, and use filename here, without extension. s3scanner : s3scanner specific configurations threads : (int) s3scanner number of threads providers : (list) List of providers to look for misconfigured s3 buckets. Availble options are: aws gcp digitalocean dreamhost linode For example: ['aws', 'gcp']","title":"vulnerability_scan"},{"location":"usage/scan_engine/#waf_detection","text":"Use this to detect the WAF in subdomains, wafw00f will be used to identify WAF.","title":"waf_detection"},{"location":"usage/scan_engine/#screenshot","text":"Screenshot gathering enable_http_crawl : (boolean) If set to true, only alive URLs will be used for screenshot gathering. timeout : (int) Timeout in seconds for screenshot gathering threads : (int) Numbers of threads to use for EyeWitness","title":"screenshot"},{"location":"usage/scan_engine/#shared-scan-configuration","text":"Some of the scan configurations such as threads or custom_header could be used across all the tasks. Instead of using them in individual task, you can also use them as shared configuration, outside the task object configuration. enable_http_crawl timeout rate_limit retries custom_header Example: subdomain_discovery : {} http_crawl : {} port_scan : {} osint : {} dir_file_fuzz : {} fetch_url : {} vulnerability_scan : {} waf_detection : {} screenshot : {} # shared scan config enable_http_crawl : true timeout : 10 rate_limit : 5 retries : 2 custom_header : \"Foo: bar\" These shared scan config will be used across all the tasks.","title":"Shared Scan Configuration"},{"location":"usage/scan_target/","text":"Scanning the Targets \u00b6 Once you have added the targets, you can perform the scan on the targets. Scan can be of two types: Quick Scan aka Immediate Scan Schedule Scan Periodic Scan Clocked Scan Initiating the scan in reNgine is pretty simple and straight forward process. If you've already defined the Targets and Scan Engines : Quick Scan \u00b6 Quick Scan can be used to perform immediate scan on the targets. Once you are on the targets section, click on Quick Scan icon denoted by lightening symbol. You'll now be asked to choose scan engine. Choose your preferred scan engine and clck Next. Importing Subdomains \u00b6 If you have your own recon methodology for gathering subdomains, you can now import them directly into reNgine. You can paste subdomains into the Import Subdomains text area. Out of Scope Subdomains \u00b6 If you wish to skip any subdomains, you can insert those subdomains here . reNgine will not perform any scans on those subdomains. You can paste subdomains into the Out of Subdomains text area. Schedule Scan \u00b6 With the recent upgrade, you can schedule the scan in the future. The two types of scheduled scans are: Periodic Scan \u00b6 reNgine provides the ability to periodically schedule the scan like, \"I want to scan example.com every 10 minutes\" or \"I want to schedule the scan every 10 days\". Periodic scan will allow you to schedule the scan every X Minutes Hours Days Weeks Months Clocked Scan \u00b6 Clocked scan are different than Periodic Scan. In clocked scan, you can schedule the scan at a specific time. Like, \"I want to schedule the scan at 3 pm 26th August 2021.\" Clocked Scan are one time task. Scan Status \u00b6 reNgine has 5 different scan status. Scan Status Successful : The target is successfully scanned. Scanning : The target is being currently scanned. Pending : The target is currently on pending mode. reNgine can scans targets in parallel, suppose when there are more than 4 targets being scanned at a time, the 5th target goes into pending mode. Once the scan is completed, the 5th scan automatically goes into Scanning mode. Aborted : The scan has been force stopped by the user. Failed : The scan has been failed.","title":"Scanning the Targets"},{"location":"usage/scan_target/#scanning-the-targets","text":"Once you have added the targets, you can perform the scan on the targets. Scan can be of two types: Quick Scan aka Immediate Scan Schedule Scan Periodic Scan Clocked Scan Initiating the scan in reNgine is pretty simple and straight forward process. If you've already defined the Targets and Scan Engines :","title":"Scanning the Targets"},{"location":"usage/scan_target/#quick-scan","text":"Quick Scan can be used to perform immediate scan on the targets. Once you are on the targets section, click on Quick Scan icon denoted by lightening symbol. You'll now be asked to choose scan engine. Choose your preferred scan engine and clck Next.","title":"Quick Scan"},{"location":"usage/scan_target/#importing-subdomains","text":"If you have your own recon methodology for gathering subdomains, you can now import them directly into reNgine. You can paste subdomains into the Import Subdomains text area.","title":"Importing Subdomains"},{"location":"usage/scan_target/#out-of-scope-subdomains","text":"If you wish to skip any subdomains, you can insert those subdomains here . reNgine will not perform any scans on those subdomains. You can paste subdomains into the Out of Subdomains text area.","title":"Out of Scope Subdomains"},{"location":"usage/scan_target/#schedule-scan","text":"With the recent upgrade, you can schedule the scan in the future. The two types of scheduled scans are:","title":"Schedule Scan"},{"location":"usage/scan_target/#periodic-scan","text":"reNgine provides the ability to periodically schedule the scan like, \"I want to scan example.com every 10 minutes\" or \"I want to schedule the scan every 10 days\". Periodic scan will allow you to schedule the scan every X Minutes Hours Days Weeks Months","title":"Periodic Scan"},{"location":"usage/scan_target/#clocked-scan","text":"Clocked scan are different than Periodic Scan. In clocked scan, you can schedule the scan at a specific time. Like, \"I want to schedule the scan at 3 pm 26th August 2021.\" Clocked Scan are one time task.","title":"Clocked Scan"},{"location":"usage/scan_target/#scan-status","text":"reNgine has 5 different scan status. Scan Status Successful : The target is successfully scanned. Scanning : The target is being currently scanned. Pending : The target is currently on pending mode. reNgine can scans targets in parallel, suppose when there are more than 4 targets being scanned at a time, the 5th target goes into pending mode. Once the scan is completed, the 5th scan automatically goes into Scanning mode. Aborted : The scan has been force stopped by the user. Failed : The scan has been failed.","title":"Scan Status"},{"location":"usage/settings/","text":"reNgine settings \u00b6 reNgine allows you to cleanup your scan results or just delete all the screenshots. This is because, most of us run reNgine on VPS and are limited by storage space. Click on Settings menu on top navigation bar and click on reNgine settings menu. Danger Please note that these actions are irreversible. You have two options here, Delete all scan results This will delete all the scan history and also screenshots and likely to free up disk space. Delete all Screenshots Once you delete all screenshots, you are likely to free up some disk space. Scan history will not be able to show any screenshots after deleted.","title":"reNgine settings"},{"location":"usage/settings/#rengine-settings","text":"reNgine allows you to cleanup your scan results or just delete all the screenshots. This is because, most of us run reNgine on VPS and are limited by storage space. Click on Settings menu on top navigation bar and click on reNgine settings menu. Danger Please note that these actions are irreversible. You have two options here, Delete all scan results This will delete all the scan history and also screenshots and likely to free up disk space. Delete all Screenshots Once you delete all screenshots, you are likely to free up some disk space. Scan history will not be able to show any screenshots after deleted.","title":"reNgine settings"},{"location":"usage/subscan/","text":"reNgine 1.1 introduced yet another game changing feature called SubScan. SubScan allows you to perform additional scans on Subdomains that are discovered. To perform SubScan you can simply select one or more subdomains and click on \u26a1 Initiate Further Scan button. Look for \u26a1 button. Choose the subtasks to perform. You can choose one or more subtasks Click on Initiate Subscan. Once subscan is completed you can check the subscan results by simply clicking on each subscans.","title":"Subscan"},{"location":"usage/targets/","text":"Targets in reNgine \u00b6 Target could be a domain or a subdomain, that you wish to perform recon. Having a target is a must and a basic requirement to run any scan. To add the Target , navigate to the top navigation menu and click on Targets . Too add the targets click on Add Targets button. You have 3 options to add the Targets, Adding Individual targets Resolve Domains from IP or CIDRs Adding Multiple targets Import via Files Adding Individual Targets \u00b6 This allows you to add single Individual targets. What is team handle? \u00b6 What is team_handle? Team handle is used to automatically report vulnerability to a program on hackerone. This is the identifier of the program. Also can be identified by the URL hackerone.com/team_handle, Use this only if you want to report the vulnerability to Hackerone. More information on how to use automatic vulnerability reporting can be found here. Resolve Domains from IP or CIDRs \u00b6 If you have a IP address and wish to import domain from, you can do so via Add IP Address section. Enter the IP and click on Resolve IP Address button. reNgine will attempt to resolve the IP Address. Click on the checkboxes for all the domains you wish to import. Adding Multiple Targets \u00b6 This feature allows you to add multiple targets at once. But remember that the description and team_handle, if used, will be applied to all the targets. Importing Targets \u00b6 reNgine provides the ability to import multiple targets. File extension support reNgine currently supports importing targets only from .txt and .csv files. Importing Targets from txt file \u00b6 Please note that the txt file must only contain domain names or subdomain names. Any other format will be rejected by rengine. Supported txt Format hackerone.com docs.hackerone.com example.com UnSupported txt Format https://hackerone.com https://docs.hackerone.com example.com/docs Importing Targets from csv file \u00b6 reNgine also provides an option to import targets from a csv file. The csv file contents must be in the form of domain/subdomain_name,Description Having description is optional in csv format. Supported CSV Format hackerone.com docs.hackerone.com, Hackerone Docs nepal.gov.np, Nepal Government Bug Bounty UnSupported CSV Format https://hackerone.com, Hackerone, Target https://docs.hackerone.com","title":"Targets in reNgine"},{"location":"usage/targets/#targets-in-rengine","text":"Target could be a domain or a subdomain, that you wish to perform recon. Having a target is a must and a basic requirement to run any scan. To add the Target , navigate to the top navigation menu and click on Targets . Too add the targets click on Add Targets button. You have 3 options to add the Targets, Adding Individual targets Resolve Domains from IP or CIDRs Adding Multiple targets Import via Files","title":"Targets in reNgine"},{"location":"usage/targets/#adding-individual-targets","text":"This allows you to add single Individual targets.","title":"Adding Individual Targets"},{"location":"usage/targets/#what-is-team-handle","text":"What is team_handle? Team handle is used to automatically report vulnerability to a program on hackerone. This is the identifier of the program. Also can be identified by the URL hackerone.com/team_handle, Use this only if you want to report the vulnerability to Hackerone. More information on how to use automatic vulnerability reporting can be found here.","title":"What is team handle?"},{"location":"usage/targets/#resolve-domains-from-ip-or-cidrs","text":"If you have a IP address and wish to import domain from, you can do so via Add IP Address section. Enter the IP and click on Resolve IP Address button. reNgine will attempt to resolve the IP Address. Click on the checkboxes for all the domains you wish to import.","title":"Resolve Domains from IP or CIDRs"},{"location":"usage/targets/#adding-multiple-targets","text":"This feature allows you to add multiple targets at once. But remember that the description and team_handle, if used, will be applied to all the targets.","title":"Adding Multiple Targets"},{"location":"usage/targets/#importing-targets","text":"reNgine provides the ability to import multiple targets. File extension support reNgine currently supports importing targets only from .txt and .csv files.","title":"Importing Targets"},{"location":"usage/targets/#importing-targets-from-txt-file","text":"Please note that the txt file must only contain domain names or subdomain names. Any other format will be rejected by rengine. Supported txt Format hackerone.com docs.hackerone.com example.com UnSupported txt Format https://hackerone.com https://docs.hackerone.com example.com/docs","title":"Importing Targets from txt file"},{"location":"usage/targets/#importing-targets-from-csv-file","text":"reNgine also provides an option to import targets from a csv file. The csv file contents must be in the form of domain/subdomain_name,Description Having description is optional in csv format. Supported CSV Format hackerone.com docs.hackerone.com, Hackerone Docs nepal.gov.np, Nepal Government Bug Bounty UnSupported CSV Format https://hackerone.com, Hackerone, Target https://docs.hackerone.com","title":"Importing Targets from csv file"},{"location":"usage/tool_conf/","text":"Tool Settings \u00b6 You can now upload custom gf patterns, nuclei templated and edit tool configurations directly from UI. Uploading custom gf patterns and nuclei templates. \u00b6 Please visit GF Documentation and Nuclei documentation on what kind of templates are supported. GF supports json templates while nuclei allows only YAML to be uploaded. Visit Scan Engine Section Once you have uploaded custom patterns or templates, please visit Scan Engine section on how to use custom patterns and templates. Editing tool configurations \u00b6 Tools like Naabu, Nuclei, Subfinder and amass uses their own configuration files. You can edit the configuration files directly from UI. On each tool section, double click the textarea, it will be available to edit the configuration. Please visit tool specific documentation on what kind of configuration is supported.","title":"Tool Settings"},{"location":"usage/tool_conf/#tool-settings","text":"You can now upload custom gf patterns, nuclei templated and edit tool configurations directly from UI.","title":"Tool Settings"},{"location":"usage/tool_conf/#uploading-custom-gf-patterns-and-nuclei-templates","text":"Please visit GF Documentation and Nuclei documentation on what kind of templates are supported. GF supports json templates while nuclei allows only YAML to be uploaded. Visit Scan Engine Section Once you have uploaded custom patterns or templates, please visit Scan Engine section on how to use custom patterns and templates.","title":"Uploading custom gf patterns and nuclei templates."},{"location":"usage/tool_conf/#editing-tool-configurations","text":"Tools like Naabu, Nuclei, Subfinder and amass uses their own configuration files. You can edit the configuration files directly from UI. On each tool section, double click the textarea, it will be available to edit the configuration. Please visit tool specific documentation on what kind of configuration is supported.","title":"Editing tool configurations"},{"location":"usage/wordlist/","text":"Wordlist \u00b6 Tools like dirsearch or amass uses wordlist to bruteforce the directories or subdomains. reNgine provides the opton to upload your own wordlists. Adding new Wordlist \u00b6 To upload your Wordlists, on the top navigation menu, click on Engine and then Wordlists. Now click on \"Add New Wordlist\". Fields Wordlist Name : The Wordlist name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Upload your wordlist in txt file format. Using the wordlist in Scan Engine will be discussed in the Scan Engine section. Common Wordlists Some of the common wordlists for your scans. * Seclists * Jason Haddix DNS Enumeration wordlist * Jason Haddix Content Discovery wordlist Default Wordlist reNgine also has default wordlist called deepmagic top 5000 prefix, which can be referenced in scan engines using wordlist: default","title":"Wordlist"},{"location":"usage/wordlist/#wordlist","text":"Tools like dirsearch or amass uses wordlist to bruteforce the directories or subdomains. reNgine provides the opton to upload your own wordlists.","title":"Wordlist"},{"location":"usage/wordlist/#adding-new-wordlist","text":"To upload your Wordlists, on the top navigation menu, click on Engine and then Wordlists. Now click on \"Add New Wordlist\". Fields Wordlist Name : The Wordlist name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Upload your wordlist in txt file format. Using the wordlist in Scan Engine will be discussed in the Scan Engine section. Common Wordlists Some of the common wordlists for your scans. * Seclists * Jason Haddix DNS Enumeration wordlist * Jason Haddix Content Discovery wordlist Default Wordlist reNgine also has default wordlist called deepmagic top 5000 prefix, which can be referenced in scan engines using wordlist: default","title":"Adding new Wordlist"}]}